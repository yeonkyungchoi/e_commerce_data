{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"provenance":[],"toc_visible":true,"authorship_tag":"ABX9TyPYvj3Y+L5XZnIHxkzJxi0A"},"kernelspec":{"name":"python3","display_name":"Python 3"},"language_info":{"name":"python"}},"cells":[{"cell_type":"code","execution_count":2,"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"oHIAOTggE5dd","executionInfo":{"status":"ok","timestamp":1693528418149,"user_tz":-540,"elapsed":17584,"user":{"displayName":"ÏµúÏó∞Í≤Ω","userId":"07593915359092771547"}},"outputId":"dbd74143-659c-4810-be9d-ae2036b7fd3b"},"outputs":[{"output_type":"stream","name":"stdout","text":["Mounted at /content/drive\n"]}],"source":["from google.colab import drive\n","drive.mount('/content/drive')"]},{"cell_type":"code","source":["import os\n","os.chdir('/content/drive/MyDrive/·Ñë·Ö°·Ñã·Öµ·Ñä·Ö•·Ü´ ·ÑÉ·Ö¶·Ñã·Öµ·Ñê·Ö•·Ñá·ÖÆ·Ü´·Ñâ·Ö•·Ü®/·ÑÄ·Ö¢·Ñã·Öµ·Ü´ ·Ñë·Ö≥·ÑÖ·Ö©·Ñå·Ö¶·Ü®·Ñê·Ö≥/RFM·Ñá·ÖÆ·Ü´·Ñâ·Ö•·Ü®')\n","os.getcwd()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":36},"id":"8vPAMysGFKCQ","executionInfo":{"status":"ok","timestamp":1693528418149,"user_tz":-540,"elapsed":4,"user":{"displayName":"ÏµúÏó∞Í≤Ω","userId":"07593915359092771547"}},"outputId":"949f937e-f1e9-49de-8f7a-048907297a78"},"execution_count":3,"outputs":[{"output_type":"execute_result","data":{"text/plain":["'/content/drive/MyDrive/·Ñë·Ö°·Ñã·Öµ·Ñä·Ö•·Ü´ ·ÑÉ·Ö¶·Ñã·Öµ·Ñê·Ö•·Ñá·ÖÆ·Ü´·Ñâ·Ö•·Ü®/·ÑÄ·Ö¢·Ñã·Öµ·Ü´ ·Ñë·Ö≥·ÑÖ·Ö©·Ñå·Ö¶·Ü®·Ñê·Ö≥/RFM·Ñá·ÖÆ·Ü´·Ñâ·Ö•·Ü®'"],"application/vnd.google.colaboratory.intrinsic+json":{"type":"string"}},"metadata":{},"execution_count":3}]},{"cell_type":"markdown","source":["# **Ïù¥Ïª§Î®∏Ïä§ Îç∞Ïù¥ÌÑ∞ ÌôúÏö© ÏßÄÌëú Í∞úÎ∞ú**\n","## > **Î™©Ï∞®(Context)**\n","* Î¨∏Ï†úÏÉÅÌô© Î∞è Îç∞Ïù¥ÌÑ∞ ÏÇ¥Ìé¥Î≥¥Í∏∞\n","* Î¨∏Ï†úÌï¥Í≤∞ ÌîÑÎ°úÏÑ∏Ïä§ Ï†ïÏùò\n","* ü•âSetp 1 - „ÄåÏÑúÎπÑÏä§ Ïù¥Ïö©ÌòïÌÉú ÌÉêÏÉâ„Äç\n","* ü•àSetp 2 - „ÄåÏßÄÌëú Í∏∞Ìöç Î∞è Îç∞Ïù¥ÌÑ∞ Ï∂îÏ∂ú„Äç\n","* ü•áSetp 3 - „ÄåRFM ÌôúÏö© ÏÑúÎπÑÏä§ Ïù¥Ïö© ÏàòÏ§Ä Ï∏°Ï†ï„Äç\n"],"metadata":{"id":"KjU-eOKvFhgy"}},{"cell_type":"markdown","source":["## **Î¨∏Ï†úÏÉÅÌô© Î∞è Îç∞Ïù¥ÌÑ∞ ÏÇ¥Ìé¥Î≥¥Í∏∞**\n","---\n","> **ÏãúÎÇòÎ¶¨Ïò§**\n","\n","```\n","AÏÇ¨Îäî Ïò§ÌîàÎßàÏºì ÌîåÎû´ÌèºÏùÑ Ïö¥ÏòÅ Ï§ëÏù¥Îã§. Îü∞Ïπ≠ Ïù¥ÌõÑ ÏÇ¨Ïö©ÏûêÎì§Ïù¥ Îπ†Î•¥Í≤å ÏÉÅÏäπÌïòÏòÄÏßÄÎßå, ÌòÑÏû¨Îäî Ï†ïÏ≤¥Í∏∞Ïóê Îπ†Ï†∏ÏûàÎã§. ÌòÑÏû¨ ÏÑúÎπÑÏä§ Ïù¥Ïö© ÏàòÏ§ÄÏù¥  \n","Ïñ¥ÎñªÍ≤å ÎêòÍ≥† ÏûàÏúºÎ©∞ Îü∞Ïπ≠ Ïù¥ÌõÑ Ïñ¥ÎñªÍ≤å Î≥ÄÌï¥ÏôîÎäîÏßÄÎ•º ÌååÏïÖÌïòÍ∏∞ ÏúÑÌï¥ Îã§ÏñëÌïú Î∂ÑÏÑùÏùÑ ÏàòÌñâÌïòÍ≥†Ïûê ÌïúÎã§.\n","\n","```  "],"metadata":{"id":"Ec8AWAf3F7j8"}},{"cell_type":"markdown","source":["\n","## **Î¨∏Ï†úÌï¥Í≤∞ ÌîÑÎ°úÏÑ∏Ïä§ Ï†ïÏùò**\n","---\n","> **Î¨∏Ï†úÏ†ïÏùò**\n","\n","```\n","‚ñ∂ Îü∞Ïπ≠ Ïù¥ÌõÑ ÏÑúÎπÑÏä§ Ï†ïÏ≤¥Í∏∞Î°ú Ïù∏Ìïú ÏòÅÏóÖÏù¥Ïùµ, ÏÇ¨Ïö© Í≥†Í∞ùÏàò Í∞êÏÜå\n","```  \n","\n","> **Ìï¥Í≤∞Î∞©Ïïà**\n","\n","```\n","‚ñ∂ Íµ¨Îß§ Îç∞Ïù¥ÌÑ∞ ÌôúÏö© ÏÑúÎπÑÏä§ Ïù¥Ïö© ÌòÑÌô© ÌååÏïÖ(ÏßÄÌëú Í∏∞Ìöç)\n","‚ñ∂ Îã§ÏñëÌïú Data Ï†ÑÏ≤òÎ¶¨\n","‚ñ∂ RFM Î™®Îç∏Ïóê ÎåÄÌïú Ïù¥Ìï¥ÏôÄ Í∞Å ÏßÄÌëú ÏÑ§Ï†ï Î∞©Î≤ï\n","‚ñ∂ RFMÌôúÏö© ÏÑúÎπÑÏä§ ÏßÄÌëú Í∏∞Ìöç Î∞è Í∞úÎ∞ú\n","```"],"metadata":{"id":"zsBIFA8kHE8j"}},{"cell_type":"markdown","source":["> **Îç∞Ïù¥ÌÑ∞ ÏÇ¥Ìé¥Î≥¥Í∏∞**\n","\n","* Ïù¥Ïª§Î®∏Ïä§ Ïò®ÎùºÏù∏ Íµ¨Îß§ Îç∞Ïù¥ÌÑ∞\n","* Îç∞Ïù¥ÌÑ∞ Î™ÖÏÑ∏ ‚¨á\n","\n","|InvoiceNo|StockCode|Description|Quantity|InvoiceDate|UnitPrice|CustomerID|Country|\n","|:---:|:---:|:---:|:---:|:---:|:---:|:---:|:---:|\n","|ÏÜ°Ïû•Î≤àÌò∏|Ïû¨Í≥†ÏΩîÎìú|ÏÉÅÏÑ∏ÏÑ§Î™Ö|ÏàòÎüâ|ÏÜ°Ïû•ÎÇ†Ïßú|Í∞úÎãπÍ∞ÄÍ≤©|Í≥†Í∞ùID|ÎÇòÎùº|"],"metadata":{"id":"yJJ1POhHGLYc"}},{"cell_type":"code","source":["import pandas as pd\n","import numpy as np\n","\n","df=pd.read_csv('e_commerce.csv',encoding='ISO-8859-1')\n","df.head(5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"yxb5tlZ5FV1s","executionInfo":{"status":"ok","timestamp":1693528420432,"user_tz":-540,"elapsed":2286,"user":{"displayName":"ÏµúÏó∞Í≤Ω","userId":"07593915359092771547"}},"outputId":"da5b24b1-1961-4a68-a960-4674dae77ebe"},"execution_count":4,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  InvoiceNo StockCode                          Description  Quantity  \\\n","0    536365    85123A   WHITE HANGING HEART T-LIGHT HOLDER         6   \n","1    536365     71053                  WHITE METAL LANTERN         6   \n","2    536365    84406B       CREAM CUPID HEARTS COAT HANGER         8   \n","3    536365    84029G  KNITTED UNION FLAG HOT WATER BOTTLE         6   \n","4    536365    84029E       RED WOOLLY HOTTIE WHITE HEART.         6   \n","\n","      InvoiceDate  UnitPrice  CustomerID         Country  \n","0  12/1/2010 8:26       2.55     17850.0  United Kingdom  \n","1  12/1/2010 8:26       3.39     17850.0  United Kingdom  \n","2  12/1/2010 8:26       2.75     17850.0  United Kingdom  \n","3  12/1/2010 8:26       3.39     17850.0  United Kingdom  \n","4  12/1/2010 8:26       3.39     17850.0  United Kingdom  "],"text/html":["\n","  <div id=\"df-299cb17e-1e98-4167-bb74-5342fda7935f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>InvoiceNo</th>\n","      <th>StockCode</th>\n","      <th>Description</th>\n","      <th>Quantity</th>\n","      <th>InvoiceDate</th>\n","      <th>UnitPrice</th>\n","      <th>CustomerID</th>\n","      <th>Country</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>536365</td>\n","      <td>85123A</td>\n","      <td>WHITE HANGING HEART T-LIGHT HOLDER</td>\n","      <td>6</td>\n","      <td>12/1/2010 8:26</td>\n","      <td>2.55</td>\n","      <td>17850.0</td>\n","      <td>United Kingdom</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>536365</td>\n","      <td>71053</td>\n","      <td>WHITE METAL LANTERN</td>\n","      <td>6</td>\n","      <td>12/1/2010 8:26</td>\n","      <td>3.39</td>\n","      <td>17850.0</td>\n","      <td>United Kingdom</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>536365</td>\n","      <td>84406B</td>\n","      <td>CREAM CUPID HEARTS COAT HANGER</td>\n","      <td>8</td>\n","      <td>12/1/2010 8:26</td>\n","      <td>2.75</td>\n","      <td>17850.0</td>\n","      <td>United Kingdom</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>536365</td>\n","      <td>84029G</td>\n","      <td>KNITTED UNION FLAG HOT WATER BOTTLE</td>\n","      <td>6</td>\n","      <td>12/1/2010 8:26</td>\n","      <td>3.39</td>\n","      <td>17850.0</td>\n","      <td>United Kingdom</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>536365</td>\n","      <td>84029E</td>\n","      <td>RED WOOLLY HOTTIE WHITE HEART.</td>\n","      <td>6</td>\n","      <td>12/1/2010 8:26</td>\n","      <td>3.39</td>\n","      <td>17850.0</td>\n","      <td>United Kingdom</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-299cb17e-1e98-4167-bb74-5342fda7935f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-299cb17e-1e98-4167-bb74-5342fda7935f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-299cb17e-1e98-4167-bb74-5342fda7935f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-841e8f9c-3f53-4d70-86c9-bec5beb91240\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-841e8f9c-3f53-4d70-86c9-bec5beb91240')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-841e8f9c-3f53-4d70-86c9-bec5beb91240 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":4}]},{"cell_type":"code","source":["print('df', df.shape)\n","df.info()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"Y5eG9eWcGOfO","executionInfo":{"status":"ok","timestamp":1693528420711,"user_tz":-540,"elapsed":282,"user":{"displayName":"ÏµúÏó∞Í≤Ω","userId":"07593915359092771547"}},"outputId":"846e76e7-24f8-4adb-90a2-1c23f6001abe"},"execution_count":5,"outputs":[{"output_type":"stream","name":"stdout","text":["df (541909, 8)\n","<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 541909 entries, 0 to 541908\n","Data columns (total 8 columns):\n"," #   Column       Non-Null Count   Dtype  \n","---  ------       --------------   -----  \n"," 0   InvoiceNo    541909 non-null  object \n"," 1   StockCode    541909 non-null  object \n"," 2   Description  540455 non-null  object \n"," 3   Quantity     541909 non-null  int64  \n"," 4   InvoiceDate  541909 non-null  object \n"," 5   UnitPrice    541909 non-null  float64\n"," 6   CustomerID   406829 non-null  float64\n"," 7   Country      541909 non-null  object \n","dtypes: float64(2), int64(1), object(5)\n","memory usage: 33.1+ MB\n"]}]},{"cell_type":"code","source":["print(df.isnull().sum())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"AhHqUwjGGp8O","executionInfo":{"status":"ok","timestamp":1693528421480,"user_tz":-540,"elapsed":770,"user":{"displayName":"ÏµúÏó∞Í≤Ω","userId":"07593915359092771547"}},"outputId":"b08433ca-8336-4925-e31b-097dccaaf3db"},"execution_count":6,"outputs":[{"output_type":"stream","name":"stdout","text":["InvoiceNo           0\n","StockCode           0\n","Description      1454\n","Quantity            0\n","InvoiceDate         0\n","UnitPrice           0\n","CustomerID     135080\n","Country             0\n","dtype: int64\n"]}]},{"cell_type":"code","source":["df.dropna(subset=['CustomerID'], how= 'all', inplace = True)\n","df.isnull().sum()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"bnTrQQf7JtD8","executionInfo":{"status":"ok","timestamp":1693528421954,"user_tz":-540,"elapsed":475,"user":{"displayName":"ÏµúÏó∞Í≤Ω","userId":"07593915359092771547"}},"outputId":"f74e4814-95c1-4dca-dce2-7975cb7338b2"},"execution_count":7,"outputs":[{"output_type":"execute_result","data":{"text/plain":["InvoiceNo      0\n","StockCode      0\n","Description    0\n","Quantity       0\n","InvoiceDate    0\n","UnitPrice      0\n","CustomerID     0\n","Country        0\n","dtype: int64"]},"metadata":{},"execution_count":7}]},{"cell_type":"code","source":["df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"18i2MZ1LHnYg","executionInfo":{"status":"ok","timestamp":1693528421955,"user_tz":-540,"elapsed":5,"user":{"displayName":"ÏµúÏó∞Í≤Ω","userId":"07593915359092771547"}},"outputId":"e500cc62-5efb-4151-bc7e-b76eeb1428ef"},"execution_count":8,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            Quantity      UnitPrice     CustomerID\n","count  406829.000000  406829.000000  406829.000000\n","mean       12.061303       3.460471   15287.690570\n","std       248.693370      69.315162    1713.600303\n","min    -80995.000000       0.000000   12346.000000\n","25%         2.000000       1.250000   13953.000000\n","50%         5.000000       1.950000   15152.000000\n","75%        12.000000       3.750000   16791.000000\n","max     80995.000000   38970.000000   18287.000000"],"text/html":["\n","  <div id=\"df-66d62506-14d9-41b1-a9a1-b517e3495dd6\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Quantity</th>\n","      <th>UnitPrice</th>\n","      <th>CustomerID</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>406829.000000</td>\n","      <td>406829.000000</td>\n","      <td>406829.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>12.061303</td>\n","      <td>3.460471</td>\n","      <td>15287.690570</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>248.693370</td>\n","      <td>69.315162</td>\n","      <td>1713.600303</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>-80995.000000</td>\n","      <td>0.000000</td>\n","      <td>12346.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>2.000000</td>\n","      <td>1.250000</td>\n","      <td>13953.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>5.000000</td>\n","      <td>1.950000</td>\n","      <td>15152.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>12.000000</td>\n","      <td>3.750000</td>\n","      <td>16791.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>80995.000000</td>\n","      <td>38970.000000</td>\n","      <td>18287.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-66d62506-14d9-41b1-a9a1-b517e3495dd6')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-66d62506-14d9-41b1-a9a1-b517e3495dd6 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-66d62506-14d9-41b1-a9a1-b517e3495dd6');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-30186a3e-ff1f-4f60-9832-641b480ce7ce\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-30186a3e-ff1f-4f60-9832-641b480ce7ce')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-30186a3e-ff1f-4f60-9832-641b480ce7ce button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":8}]},{"cell_type":"code","source":["import seaborn as sns\n","import matplotlib.pyplot as plt\n","%matplotlib inline\n","plt.style.use(['dark_background'])\n","\n","sns.distplot(df['Quantity'])"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":663},"id":"Sv5cHR6PNtLJ","executionInfo":{"status":"ok","timestamp":1693528425129,"user_tz":-540,"elapsed":3178,"user":{"displayName":"ÏµúÏó∞Í≤Ω","userId":"07593915359092771547"}},"outputId":"a8ff5b5e-bf09-4ceb-ff09-a3d12a73c70a"},"execution_count":9,"outputs":[{"output_type":"stream","name":"stderr","text":["<ipython-input-9-605ad021ede6>:6: UserWarning: \n","\n","`distplot` is a deprecated function and will be removed in seaborn v0.14.0.\n","\n","Please adapt your code to use either `displot` (a figure-level function with\n","similar flexibility) or `histplot` (an axes-level function for histograms).\n","\n","For a guide to updating your code to use the new functions, please see\n","https://gist.github.com/mwaskom/de44147ed2974457ad6372750bbe5751\n","\n","  sns.distplot(df['Quantity'])\n"]},{"output_type":"execute_result","data":{"text/plain":["<Axes: xlabel='Quantity', ylabel='Density'>"]},"metadata":{},"execution_count":9},{"output_type":"display_data","data":{"text/plain":["<Figure size 640x480 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["df = df[df['Quantity']>0]\n","df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"RunORogeG4Ye","executionInfo":{"status":"ok","timestamp":1693528425720,"user_tz":-540,"elapsed":594,"user":{"displayName":"ÏµúÏó∞Í≤Ω","userId":"07593915359092771547"}},"outputId":"b75b8c56-d6cb-4b9b-9ed0-7c46f935c029"},"execution_count":10,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            Quantity      UnitPrice     CustomerID\n","count  397924.000000  397924.000000  397924.000000\n","mean       13.021823       3.116174   15294.315171\n","std       180.420210      22.096788    1713.169877\n","min         1.000000       0.000000   12346.000000\n","25%         2.000000       1.250000   13969.000000\n","50%         6.000000       1.950000   15159.000000\n","75%        12.000000       3.750000   16795.000000\n","max     80995.000000    8142.750000   18287.000000"],"text/html":["\n","  <div id=\"df-e16f53b4-007d-4f16-bb4e-bef39d489089\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Quantity</th>\n","      <th>UnitPrice</th>\n","      <th>CustomerID</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>397924.000000</td>\n","      <td>397924.000000</td>\n","      <td>397924.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>13.021823</td>\n","      <td>3.116174</td>\n","      <td>15294.315171</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>180.420210</td>\n","      <td>22.096788</td>\n","      <td>1713.169877</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>12346.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>2.000000</td>\n","      <td>1.250000</td>\n","      <td>13969.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>6.000000</td>\n","      <td>1.950000</td>\n","      <td>15159.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>12.000000</td>\n","      <td>3.750000</td>\n","      <td>16795.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>80995.000000</td>\n","      <td>8142.750000</td>\n","      <td>18287.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e16f53b4-007d-4f16-bb4e-bef39d489089')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e16f53b4-007d-4f16-bb4e-bef39d489089 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e16f53b4-007d-4f16-bb4e-bef39d489089');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-a02d486c-0166-4c00-aac5-0058f922ba3b\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-a02d486c-0166-4c00-aac5-0058f922ba3b')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-a02d486c-0166-4c00-aac5-0058f922ba3b button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":10}]},{"cell_type":"code","source":["df = df[df['UnitPrice']>0]\n","df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"kgs2o-AdRM-l","executionInfo":{"status":"ok","timestamp":1693528425720,"user_tz":-540,"elapsed":7,"user":{"displayName":"ÏµúÏó∞Í≤Ω","userId":"07593915359092771547"}},"outputId":"3d55d204-438c-445d-aa58-034fe040e7d3"},"execution_count":11,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            Quantity      UnitPrice     CustomerID\n","count  397884.000000  397884.000000  397884.000000\n","mean       12.988238       3.116488   15294.423453\n","std       179.331775      22.097877    1713.141560\n","min         1.000000       0.001000   12346.000000\n","25%         2.000000       1.250000   13969.000000\n","50%         6.000000       1.950000   15159.000000\n","75%        12.000000       3.750000   16795.000000\n","max     80995.000000    8142.750000   18287.000000"],"text/html":["\n","  <div id=\"df-cceebefc-a898-4c6b-8384-5264186b30dc\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Quantity</th>\n","      <th>UnitPrice</th>\n","      <th>CustomerID</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>397884.000000</td>\n","      <td>397884.000000</td>\n","      <td>397884.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>12.988238</td>\n","      <td>3.116488</td>\n","      <td>15294.423453</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>179.331775</td>\n","      <td>22.097877</td>\n","      <td>1713.141560</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.000000</td>\n","      <td>0.001000</td>\n","      <td>12346.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>2.000000</td>\n","      <td>1.250000</td>\n","      <td>13969.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>6.000000</td>\n","      <td>1.950000</td>\n","      <td>15159.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>12.000000</td>\n","      <td>3.750000</td>\n","      <td>16795.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>80995.000000</td>\n","      <td>8142.750000</td>\n","      <td>18287.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cceebefc-a898-4c6b-8384-5264186b30dc')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-cceebefc-a898-4c6b-8384-5264186b30dc button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-cceebefc-a898-4c6b-8384-5264186b30dc');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-889579b0-7eb3-4288-923d-0d3a75ef5216\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-889579b0-7eb3-4288-923d-0d3a75ef5216')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-889579b0-7eb3-4288-923d-0d3a75ef5216 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":11}]},{"cell_type":"code","source":["df.describe()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":300},"id":"TkxL0pHVRdeI","executionInfo":{"status":"ok","timestamp":1693528425720,"user_tz":-540,"elapsed":7,"user":{"displayName":"ÏµúÏó∞Í≤Ω","userId":"07593915359092771547"}},"outputId":"f8c5f2ae-d0eb-4271-b228-7817c32ac8eb"},"execution_count":12,"outputs":[{"output_type":"execute_result","data":{"text/plain":["            Quantity      UnitPrice     CustomerID\n","count  397884.000000  397884.000000  397884.000000\n","mean       12.988238       3.116488   15294.423453\n","std       179.331775      22.097877    1713.141560\n","min         1.000000       0.001000   12346.000000\n","25%         2.000000       1.250000   13969.000000\n","50%         6.000000       1.950000   15159.000000\n","75%        12.000000       3.750000   16795.000000\n","max     80995.000000    8142.750000   18287.000000"],"text/html":["\n","  <div id=\"df-c37fd027-281f-4152-85c1-d6f42cd7855a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Quantity</th>\n","      <th>UnitPrice</th>\n","      <th>CustomerID</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>397884.000000</td>\n","      <td>397884.000000</td>\n","      <td>397884.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>12.988238</td>\n","      <td>3.116488</td>\n","      <td>15294.423453</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>179.331775</td>\n","      <td>22.097877</td>\n","      <td>1713.141560</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.000000</td>\n","      <td>0.001000</td>\n","      <td>12346.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>2.000000</td>\n","      <td>1.250000</td>\n","      <td>13969.000000</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>6.000000</td>\n","      <td>1.950000</td>\n","      <td>15159.000000</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>12.000000</td>\n","      <td>3.750000</td>\n","      <td>16795.000000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>80995.000000</td>\n","      <td>8142.750000</td>\n","      <td>18287.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-c37fd027-281f-4152-85c1-d6f42cd7855a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-c37fd027-281f-4152-85c1-d6f42cd7855a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-c37fd027-281f-4152-85c1-d6f42cd7855a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9e39e90e-f8db-48cd-b339-5d6c80b63d28\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9e39e90e-f8db-48cd-b339-5d6c80b63d28')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9e39e90e-f8db-48cd-b339-5d6c80b63d28 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":12}]},{"cell_type":"code","source":["df.shape\n","#(541909, 8) ÏóêÏÑú ÎßéÏù¥ Ï§ÑÏñ¥Îì¶"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DEtPlRbVRiZu","executionInfo":{"status":"ok","timestamp":1693528425720,"user_tz":-540,"elapsed":7,"user":{"displayName":"ÏµúÏó∞Í≤Ω","userId":"07593915359092771547"}},"outputId":"3bf0c28d-f3ea-48df-a679-b1e43961d6fb"},"execution_count":13,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(397884, 8)"]},"metadata":{},"execution_count":13}]},{"cell_type":"code","source":["df['CustomerID'].nunique(), df['Quantity'].sum(), df['Country'].nunique()\n","# Ïù¥Ïö©Í≥†Í∞ùÏàò, Ïù¥Ïö©Í±¥Ïàò , ÎÇòÎùº"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"jk1HK9lRRyHL","executionInfo":{"status":"ok","timestamp":1693528425720,"user_tz":-540,"elapsed":5,"user":{"displayName":"ÏµúÏó∞Í≤Ω","userId":"07593915359092771547"}},"outputId":"31fd4b9a-6595-4d37-8f94-188c97529d01"},"execution_count":14,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(4338, 5167812, 37)"]},"metadata":{},"execution_count":14}]},{"cell_type":"code","source":["# Ïù∏Îãπ ÌèâÍ∑† Íµ¨Îß§Í±¥Ïàò(91Í±¥)\n","df.groupby('CustomerID')['InvoiceNo'].count().mean()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"DVKOA-mPR9k6","executionInfo":{"status":"ok","timestamp":1693528425720,"user_tz":-540,"elapsed":4,"user":{"displayName":"ÏµúÏó∞Í≤Ω","userId":"07593915359092771547"}},"outputId":"e24cb414-795f-4882-8682-a34c9fc34709"},"execution_count":15,"outputs":[{"output_type":"execute_result","data":{"text/plain":["91.72060857538035"]},"metadata":{},"execution_count":15}]},{"cell_type":"markdown","source":["##  **ÏßÄÌëú Í∏∞Ìöç Î∞è Îç∞Ïù¥ÌÑ∞ Ï∂îÏ∂ú**  \n","---"],"metadata":{"id":"betkYYstZ90N"}},{"cell_type":"markdown","source":["### ¬∑ Recency(ÏµúÍ∑ºÏÑ±)\n","---"],"metadata":{"id":"OPqnw0a_aIg2"}},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"9-QCowoOaQgE","executionInfo":{"status":"ok","timestamp":1693528425720,"user_tz":-540,"elapsed":4,"user":{"displayName":"ÏµúÏó∞Í≤Ω","userId":"07593915359092771547"}},"outputId":"67bbd480-fd31-42ca-fa8d-f928975902c1"},"execution_count":16,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  InvoiceNo StockCode                          Description  Quantity  \\\n","0    536365    85123A   WHITE HANGING HEART T-LIGHT HOLDER         6   \n","1    536365     71053                  WHITE METAL LANTERN         6   \n","2    536365    84406B       CREAM CUPID HEARTS COAT HANGER         8   \n","3    536365    84029G  KNITTED UNION FLAG HOT WATER BOTTLE         6   \n","4    536365    84029E       RED WOOLLY HOTTIE WHITE HEART.         6   \n","\n","      InvoiceDate  UnitPrice  CustomerID         Country  \n","0  12/1/2010 8:26       2.55     17850.0  United Kingdom  \n","1  12/1/2010 8:26       3.39     17850.0  United Kingdom  \n","2  12/1/2010 8:26       2.75     17850.0  United Kingdom  \n","3  12/1/2010 8:26       3.39     17850.0  United Kingdom  \n","4  12/1/2010 8:26       3.39     17850.0  United Kingdom  "],"text/html":["\n","  <div id=\"df-af470bdb-c5d5-445f-bbb0-8bcafc090833\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>InvoiceNo</th>\n","      <th>StockCode</th>\n","      <th>Description</th>\n","      <th>Quantity</th>\n","      <th>InvoiceDate</th>\n","      <th>UnitPrice</th>\n","      <th>CustomerID</th>\n","      <th>Country</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>536365</td>\n","      <td>85123A</td>\n","      <td>WHITE HANGING HEART T-LIGHT HOLDER</td>\n","      <td>6</td>\n","      <td>12/1/2010 8:26</td>\n","      <td>2.55</td>\n","      <td>17850.0</td>\n","      <td>United Kingdom</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>536365</td>\n","      <td>71053</td>\n","      <td>WHITE METAL LANTERN</td>\n","      <td>6</td>\n","      <td>12/1/2010 8:26</td>\n","      <td>3.39</td>\n","      <td>17850.0</td>\n","      <td>United Kingdom</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>536365</td>\n","      <td>84406B</td>\n","      <td>CREAM CUPID HEARTS COAT HANGER</td>\n","      <td>8</td>\n","      <td>12/1/2010 8:26</td>\n","      <td>2.75</td>\n","      <td>17850.0</td>\n","      <td>United Kingdom</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>536365</td>\n","      <td>84029G</td>\n","      <td>KNITTED UNION FLAG HOT WATER BOTTLE</td>\n","      <td>6</td>\n","      <td>12/1/2010 8:26</td>\n","      <td>3.39</td>\n","      <td>17850.0</td>\n","      <td>United Kingdom</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>536365</td>\n","      <td>84029E</td>\n","      <td>RED WOOLLY HOTTIE WHITE HEART.</td>\n","      <td>6</td>\n","      <td>12/1/2010 8:26</td>\n","      <td>3.39</td>\n","      <td>17850.0</td>\n","      <td>United Kingdom</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-af470bdb-c5d5-445f-bbb0-8bcafc090833')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-af470bdb-c5d5-445f-bbb0-8bcafc090833 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-af470bdb-c5d5-445f-bbb0-8bcafc090833');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-8f8dfe56-f55e-48bb-b41a-bd5cece3f774\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-8f8dfe56-f55e-48bb-b41a-bd5cece3f774')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-8f8dfe56-f55e-48bb-b41a-bd5cece3f774 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":16}]},{"cell_type":"code","source":["df['InvoiceDate'].str.split(' ').str[0]"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"w1e5008TaQde","executionInfo":{"status":"ok","timestamp":1693528426365,"user_tz":-540,"elapsed":649,"user":{"displayName":"ÏµúÏó∞Í≤Ω","userId":"07593915359092771547"}},"outputId":"476fa494-5a59-4ef9-8afb-f0ff372bebb9"},"execution_count":17,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0         12/1/2010\n","1         12/1/2010\n","2         12/1/2010\n","3         12/1/2010\n","4         12/1/2010\n","            ...    \n","541904    12/9/2011\n","541905    12/9/2011\n","541906    12/9/2011\n","541907    12/9/2011\n","541908    12/9/2011\n","Name: InvoiceDate, Length: 397884, dtype: object"]},"metadata":{},"execution_count":17}]},{"cell_type":"code","source":["import pandas as pd\n","\n","df['Date'] = pd.to_datetime(df['InvoiceDate'].str.split(' ').str[0])\n","df.head(5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":293},"id":"ZaSH5jhRaQU4","executionInfo":{"status":"ok","timestamp":1693528427771,"user_tz":-540,"elapsed":1407,"user":{"displayName":"ÏµúÏó∞Í≤Ω","userId":"07593915359092771547"}},"outputId":"38f8eb2c-dcbb-4b7e-adb3-ecf26296a2d0"},"execution_count":18,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  InvoiceNo StockCode                          Description  Quantity  \\\n","0    536365    85123A   WHITE HANGING HEART T-LIGHT HOLDER         6   \n","1    536365     71053                  WHITE METAL LANTERN         6   \n","2    536365    84406B       CREAM CUPID HEARTS COAT HANGER         8   \n","3    536365    84029G  KNITTED UNION FLAG HOT WATER BOTTLE         6   \n","4    536365    84029E       RED WOOLLY HOTTIE WHITE HEART.         6   \n","\n","      InvoiceDate  UnitPrice  CustomerID         Country       Date  \n","0  12/1/2010 8:26       2.55     17850.0  United Kingdom 2010-12-01  \n","1  12/1/2010 8:26       3.39     17850.0  United Kingdom 2010-12-01  \n","2  12/1/2010 8:26       2.75     17850.0  United Kingdom 2010-12-01  \n","3  12/1/2010 8:26       3.39     17850.0  United Kingdom 2010-12-01  \n","4  12/1/2010 8:26       3.39     17850.0  United Kingdom 2010-12-01  "],"text/html":["\n","  <div id=\"df-312d1cf5-7876-45a4-b824-9b5dadd550b5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>InvoiceNo</th>\n","      <th>StockCode</th>\n","      <th>Description</th>\n","      <th>Quantity</th>\n","      <th>InvoiceDate</th>\n","      <th>UnitPrice</th>\n","      <th>CustomerID</th>\n","      <th>Country</th>\n","      <th>Date</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>536365</td>\n","      <td>85123A</td>\n","      <td>WHITE HANGING HEART T-LIGHT HOLDER</td>\n","      <td>6</td>\n","      <td>12/1/2010 8:26</td>\n","      <td>2.55</td>\n","      <td>17850.0</td>\n","      <td>United Kingdom</td>\n","      <td>2010-12-01</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>536365</td>\n","      <td>71053</td>\n","      <td>WHITE METAL LANTERN</td>\n","      <td>6</td>\n","      <td>12/1/2010 8:26</td>\n","      <td>3.39</td>\n","      <td>17850.0</td>\n","      <td>United Kingdom</td>\n","      <td>2010-12-01</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>536365</td>\n","      <td>84406B</td>\n","      <td>CREAM CUPID HEARTS COAT HANGER</td>\n","      <td>8</td>\n","      <td>12/1/2010 8:26</td>\n","      <td>2.75</td>\n","      <td>17850.0</td>\n","      <td>United Kingdom</td>\n","      <td>2010-12-01</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>536365</td>\n","      <td>84029G</td>\n","      <td>KNITTED UNION FLAG HOT WATER BOTTLE</td>\n","      <td>6</td>\n","      <td>12/1/2010 8:26</td>\n","      <td>3.39</td>\n","      <td>17850.0</td>\n","      <td>United Kingdom</td>\n","      <td>2010-12-01</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>536365</td>\n","      <td>84029E</td>\n","      <td>RED WOOLLY HOTTIE WHITE HEART.</td>\n","      <td>6</td>\n","      <td>12/1/2010 8:26</td>\n","      <td>3.39</td>\n","      <td>17850.0</td>\n","      <td>United Kingdom</td>\n","      <td>2010-12-01</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-312d1cf5-7876-45a4-b824-9b5dadd550b5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-312d1cf5-7876-45a4-b824-9b5dadd550b5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-312d1cf5-7876-45a4-b824-9b5dadd550b5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-09cc6125-8422-4be0-a048-0218e36dc752\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-09cc6125-8422-4be0-a048-0218e36dc752')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-09cc6125-8422-4be0-a048-0218e36dc752 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":18}]},{"cell_type":"code","source":["df['Date'].min() , df['Date'].max()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"qNSKB7i6fjWK","executionInfo":{"status":"ok","timestamp":1693528427771,"user_tz":-540,"elapsed":4,"user":{"displayName":"ÏµúÏó∞Í≤Ω","userId":"07593915359092771547"}},"outputId":"2cef8bea-c6ae-44eb-ccc2-b3a62734d933"},"execution_count":19,"outputs":[{"output_type":"execute_result","data":{"text/plain":["(Timestamp('2010-12-01 00:00:00'), Timestamp('2011-12-09 00:00:00'))"]},"metadata":{},"execution_count":19}]},{"cell_type":"code","source":["recency_df = df.groupby('CustomerID',as_index =False)['Date'].max()\n","recency_df.columns = ['CustomerID','LastPurchaseDate']\n","recency_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"aNnguNbuf32c","executionInfo":{"status":"ok","timestamp":1693528427772,"user_tz":-540,"elapsed":5,"user":{"displayName":"ÏµúÏó∞Í≤Ω","userId":"07593915359092771547"}},"outputId":"f8038040-8f09-4a9a-be8d-ffd455875f44"},"execution_count":20,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   CustomerID LastPurchaseDate\n","0     12346.0       2011-01-18\n","1     12347.0       2011-12-07\n","2     12348.0       2011-09-25\n","3     12349.0       2011-11-21\n","4     12350.0       2011-02-02"],"text/html":["\n","  <div id=\"df-0a7d27b7-12d6-4ccc-ad40-de26cf543bcc\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>CustomerID</th>\n","      <th>LastPurchaseDate</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>12346.0</td>\n","      <td>2011-01-18</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>12347.0</td>\n","      <td>2011-12-07</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>12348.0</td>\n","      <td>2011-09-25</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>12349.0</td>\n","      <td>2011-11-21</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>12350.0</td>\n","      <td>2011-02-02</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-0a7d27b7-12d6-4ccc-ad40-de26cf543bcc')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-0a7d27b7-12d6-4ccc-ad40-de26cf543bcc button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-0a7d27b7-12d6-4ccc-ad40-de26cf543bcc');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-0f3b8f01-49f4-4460-a119-2cac756e464d\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-0f3b8f01-49f4-4460-a119-2cac756e464d')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-0f3b8f01-49f4-4460-a119-2cac756e464d button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":20}]},{"cell_type":"code","source":["recency_df['Recency'] = recency_df['LastPurchaseDate'].apply(lambda x : (df['Date'].max() - x).days)\n","recency_df\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"78r5tNfpf3z0","executionInfo":{"status":"ok","timestamp":1693528432259,"user_tz":-540,"elapsed":4491,"user":{"displayName":"ÏµúÏó∞Í≤Ω","userId":"07593915359092771547"}},"outputId":"5da8afc5-777c-4cb4-c7b8-e0e51caa4641"},"execution_count":21,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      CustomerID LastPurchaseDate  Recency\n","0        12346.0       2011-01-18      325\n","1        12347.0       2011-12-07        2\n","2        12348.0       2011-09-25       75\n","3        12349.0       2011-11-21       18\n","4        12350.0       2011-02-02      310\n","...          ...              ...      ...\n","4333     18280.0       2011-03-07      277\n","4334     18281.0       2011-06-12      180\n","4335     18282.0       2011-12-02        7\n","4336     18283.0       2011-12-06        3\n","4337     18287.0       2011-10-28       42\n","\n","[4338 rows x 3 columns]"],"text/html":["\n","  <div id=\"df-b51110fc-c51a-400f-8b13-0452086ae031\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>CustomerID</th>\n","      <th>LastPurchaseDate</th>\n","      <th>Recency</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>12346.0</td>\n","      <td>2011-01-18</td>\n","      <td>325</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>12347.0</td>\n","      <td>2011-12-07</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>12348.0</td>\n","      <td>2011-09-25</td>\n","      <td>75</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>12349.0</td>\n","      <td>2011-11-21</td>\n","      <td>18</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>12350.0</td>\n","      <td>2011-02-02</td>\n","      <td>310</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>4333</th>\n","      <td>18280.0</td>\n","      <td>2011-03-07</td>\n","      <td>277</td>\n","    </tr>\n","    <tr>\n","      <th>4334</th>\n","      <td>18281.0</td>\n","      <td>2011-06-12</td>\n","      <td>180</td>\n","    </tr>\n","    <tr>\n","      <th>4335</th>\n","      <td>18282.0</td>\n","      <td>2011-12-02</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>4336</th>\n","      <td>18283.0</td>\n","      <td>2011-12-06</td>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>4337</th>\n","      <td>18287.0</td>\n","      <td>2011-10-28</td>\n","      <td>42</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4338 rows √ó 3 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-b51110fc-c51a-400f-8b13-0452086ae031')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-b51110fc-c51a-400f-8b13-0452086ae031 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-b51110fc-c51a-400f-8b13-0452086ae031');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d2d36b5e-91af-4130-872a-2d23c4d99bc3\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d2d36b5e-91af-4130-872a-2d23c4d99bc3')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d2d36b5e-91af-4130-872a-2d23c4d99bc3 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":21}]},{"cell_type":"code","source":["sns.displot(data = recency_df, x=\"Recency\");\n","plt.gcf().set_size_inches(16.5, 3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":242},"id":"MZPtaV-hf3xP","executionInfo":{"status":"ok","timestamp":1693528433137,"user_tz":-540,"elapsed":880,"user":{"displayName":"ÏµúÏó∞Í≤Ω","userId":"07593915359092771547"}},"outputId":"a67d7687-816f-4daf-b667-23838956d905"},"execution_count":22,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 1650x300 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["df['Recency'] = recency_df['Recency']"],"metadata":{"id":"6sHN4YU7f3qO","executionInfo":{"status":"ok","timestamp":1693528433138,"user_tz":-540,"elapsed":9,"user":{"displayName":"ÏµúÏó∞Í≤Ω","userId":"07593915359092771547"}}},"execution_count":23,"outputs":[]},{"cell_type":"markdown","source":["### ¬∑ Frequency(ÏµúÎπàÏÑ±)\n","---"],"metadata":{"id":"wvmp5P64aJVN"}},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":293},"id":"k7-lU7hoaRRk","executionInfo":{"status":"ok","timestamp":1693528433138,"user_tz":-540,"elapsed":9,"user":{"displayName":"ÏµúÏó∞Í≤Ω","userId":"07593915359092771547"}},"outputId":"6208c794-42d2-4546-d68c-4f043e84a8c0"},"execution_count":24,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  InvoiceNo StockCode                          Description  Quantity  \\\n","0    536365    85123A   WHITE HANGING HEART T-LIGHT HOLDER         6   \n","1    536365     71053                  WHITE METAL LANTERN         6   \n","2    536365    84406B       CREAM CUPID HEARTS COAT HANGER         8   \n","3    536365    84029G  KNITTED UNION FLAG HOT WATER BOTTLE         6   \n","4    536365    84029E       RED WOOLLY HOTTIE WHITE HEART.         6   \n","\n","      InvoiceDate  UnitPrice  CustomerID         Country       Date  Recency  \n","0  12/1/2010 8:26       2.55     17850.0  United Kingdom 2010-12-01    325.0  \n","1  12/1/2010 8:26       3.39     17850.0  United Kingdom 2010-12-01      2.0  \n","2  12/1/2010 8:26       2.75     17850.0  United Kingdom 2010-12-01     75.0  \n","3  12/1/2010 8:26       3.39     17850.0  United Kingdom 2010-12-01     18.0  \n","4  12/1/2010 8:26       3.39     17850.0  United Kingdom 2010-12-01    310.0  "],"text/html":["\n","  <div id=\"df-bce44f93-b709-49b1-8872-fe65bdbcc30e\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>InvoiceNo</th>\n","      <th>StockCode</th>\n","      <th>Description</th>\n","      <th>Quantity</th>\n","      <th>InvoiceDate</th>\n","      <th>UnitPrice</th>\n","      <th>CustomerID</th>\n","      <th>Country</th>\n","      <th>Date</th>\n","      <th>Recency</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>536365</td>\n","      <td>85123A</td>\n","      <td>WHITE HANGING HEART T-LIGHT HOLDER</td>\n","      <td>6</td>\n","      <td>12/1/2010 8:26</td>\n","      <td>2.55</td>\n","      <td>17850.0</td>\n","      <td>United Kingdom</td>\n","      <td>2010-12-01</td>\n","      <td>325.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>536365</td>\n","      <td>71053</td>\n","      <td>WHITE METAL LANTERN</td>\n","      <td>6</td>\n","      <td>12/1/2010 8:26</td>\n","      <td>3.39</td>\n","      <td>17850.0</td>\n","      <td>United Kingdom</td>\n","      <td>2010-12-01</td>\n","      <td>2.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>536365</td>\n","      <td>84406B</td>\n","      <td>CREAM CUPID HEARTS COAT HANGER</td>\n","      <td>8</td>\n","      <td>12/1/2010 8:26</td>\n","      <td>2.75</td>\n","      <td>17850.0</td>\n","      <td>United Kingdom</td>\n","      <td>2010-12-01</td>\n","      <td>75.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>536365</td>\n","      <td>84029G</td>\n","      <td>KNITTED UNION FLAG HOT WATER BOTTLE</td>\n","      <td>6</td>\n","      <td>12/1/2010 8:26</td>\n","      <td>3.39</td>\n","      <td>17850.0</td>\n","      <td>United Kingdom</td>\n","      <td>2010-12-01</td>\n","      <td>18.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>536365</td>\n","      <td>84029E</td>\n","      <td>RED WOOLLY HOTTIE WHITE HEART.</td>\n","      <td>6</td>\n","      <td>12/1/2010 8:26</td>\n","      <td>3.39</td>\n","      <td>17850.0</td>\n","      <td>United Kingdom</td>\n","      <td>2010-12-01</td>\n","      <td>310.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-bce44f93-b709-49b1-8872-fe65bdbcc30e')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-bce44f93-b709-49b1-8872-fe65bdbcc30e button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-bce44f93-b709-49b1-8872-fe65bdbcc30e');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-e6a18483-563a-4c74-8920-cf4182ff2876\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-e6a18483-563a-4c74-8920-cf4182ff2876')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-e6a18483-563a-4c74-8920-cf4182ff2876 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":24}]},{"cell_type":"code","source":["frequency_df = df.copy()\n","frequency_df.drop_duplicates(subset=['CustomerID','InvoiceNo'], keep=\"first\", inplace=True)\n","\n","frequency_df = frequency_df.groupby('CustomerID', as_index=False)['InvoiceNo'].count()\n","frequency_df.columns = ['CustomerID','Frequency']\n","frequency_df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"b4yItKD_aRO8","executionInfo":{"status":"ok","timestamp":1693528433138,"user_tz":-540,"elapsed":8,"user":{"displayName":"ÏµúÏó∞Í≤Ω","userId":"07593915359092771547"}},"outputId":"6f3be839-23ca-4a1c-e191-5fc84d8ef5fa"},"execution_count":25,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   CustomerID  Frequency\n","0     12346.0          1\n","1     12347.0          7\n","2     12348.0          4\n","3     12349.0          1\n","4     12350.0          1"],"text/html":["\n","  <div id=\"df-cea44903-7bf6-47b9-859f-c3a2e7a7e24f\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>CustomerID</th>\n","      <th>Frequency</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>12346.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>12347.0</td>\n","      <td>7</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>12348.0</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>12349.0</td>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>12350.0</td>\n","      <td>1</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-cea44903-7bf6-47b9-859f-c3a2e7a7e24f')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-cea44903-7bf6-47b9-859f-c3a2e7a7e24f button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-cea44903-7bf6-47b9-859f-c3a2e7a7e24f');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-99956b55-d03b-41e8-b6c0-451a3e57c97f\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-99956b55-d03b-41e8-b6c0-451a3e57c97f')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-99956b55-d03b-41e8-b6c0-451a3e57c97f button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":25}]},{"cell_type":"code","source":["sns.displot(data = frequency_df, x=\"Frequency\");\n","plt.gcf().set_size_inches(5, 3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":336},"id":"axQ-F7ifaRJv","executionInfo":{"status":"ok","timestamp":1693528434110,"user_tz":-540,"elapsed":979,"user":{"displayName":"ÏµúÏó∞Í≤Ω","userId":"07593915359092771547"}},"outputId":"1f541402-9c7c-436d-b416-1ad53dff0edd"},"execution_count":26,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 500x300 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["df['Frequency'] = frequency_df['Frequency']"],"metadata":{"id":"60Ksi_o3EL12","executionInfo":{"status":"ok","timestamp":1693528434591,"user_tz":-540,"elapsed":485,"user":{"displayName":"ÏµúÏó∞Í≤Ω","userId":"07593915359092771547"}}},"execution_count":27,"outputs":[]},{"cell_type":"markdown","source":["### ¬∑ Monetary(Í∏àÏï°)\n","---"],"metadata":{"id":"9azb1BTYaMkQ"}},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":397},"id":"0zB4ntqQZDKX","executionInfo":{"status":"ok","timestamp":1693528434592,"user_tz":-540,"elapsed":14,"user":{"displayName":"ÏµúÏó∞Í≤Ω","userId":"07593915359092771547"}},"outputId":"52461029-1da3-46e2-9eec-618f54f5157d"},"execution_count":28,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  InvoiceNo StockCode                          Description  Quantity  \\\n","0    536365    85123A   WHITE HANGING HEART T-LIGHT HOLDER         6   \n","1    536365     71053                  WHITE METAL LANTERN         6   \n","2    536365    84406B       CREAM CUPID HEARTS COAT HANGER         8   \n","3    536365    84029G  KNITTED UNION FLAG HOT WATER BOTTLE         6   \n","4    536365    84029E       RED WOOLLY HOTTIE WHITE HEART.         6   \n","\n","      InvoiceDate  UnitPrice  CustomerID         Country       Date  Recency  \\\n","0  12/1/2010 8:26       2.55     17850.0  United Kingdom 2010-12-01    325.0   \n","1  12/1/2010 8:26       3.39     17850.0  United Kingdom 2010-12-01      2.0   \n","2  12/1/2010 8:26       2.75     17850.0  United Kingdom 2010-12-01     75.0   \n","3  12/1/2010 8:26       3.39     17850.0  United Kingdom 2010-12-01     18.0   \n","4  12/1/2010 8:26       3.39     17850.0  United Kingdom 2010-12-01    310.0   \n","\n","   Frequency  \n","0        1.0  \n","1        7.0  \n","2        4.0  \n","3        1.0  \n","4        1.0  "],"text/html":["\n","  <div id=\"df-ba059477-d1f5-4610-806f-5041067732d3\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>InvoiceNo</th>\n","      <th>StockCode</th>\n","      <th>Description</th>\n","      <th>Quantity</th>\n","      <th>InvoiceDate</th>\n","      <th>UnitPrice</th>\n","      <th>CustomerID</th>\n","      <th>Country</th>\n","      <th>Date</th>\n","      <th>Recency</th>\n","      <th>Frequency</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>536365</td>\n","      <td>85123A</td>\n","      <td>WHITE HANGING HEART T-LIGHT HOLDER</td>\n","      <td>6</td>\n","      <td>12/1/2010 8:26</td>\n","      <td>2.55</td>\n","      <td>17850.0</td>\n","      <td>United Kingdom</td>\n","      <td>2010-12-01</td>\n","      <td>325.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>536365</td>\n","      <td>71053</td>\n","      <td>WHITE METAL LANTERN</td>\n","      <td>6</td>\n","      <td>12/1/2010 8:26</td>\n","      <td>3.39</td>\n","      <td>17850.0</td>\n","      <td>United Kingdom</td>\n","      <td>2010-12-01</td>\n","      <td>2.0</td>\n","      <td>7.0</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>536365</td>\n","      <td>84406B</td>\n","      <td>CREAM CUPID HEARTS COAT HANGER</td>\n","      <td>8</td>\n","      <td>12/1/2010 8:26</td>\n","      <td>2.75</td>\n","      <td>17850.0</td>\n","      <td>United Kingdom</td>\n","      <td>2010-12-01</td>\n","      <td>75.0</td>\n","      <td>4.0</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>536365</td>\n","      <td>84029G</td>\n","      <td>KNITTED UNION FLAG HOT WATER BOTTLE</td>\n","      <td>6</td>\n","      <td>12/1/2010 8:26</td>\n","      <td>3.39</td>\n","      <td>17850.0</td>\n","      <td>United Kingdom</td>\n","      <td>2010-12-01</td>\n","      <td>18.0</td>\n","      <td>1.0</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>536365</td>\n","      <td>84029E</td>\n","      <td>RED WOOLLY HOTTIE WHITE HEART.</td>\n","      <td>6</td>\n","      <td>12/1/2010 8:26</td>\n","      <td>3.39</td>\n","      <td>17850.0</td>\n","      <td>United Kingdom</td>\n","      <td>2010-12-01</td>\n","      <td>310.0</td>\n","      <td>1.0</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ba059477-d1f5-4610-806f-5041067732d3')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ba059477-d1f5-4610-806f-5041067732d3 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ba059477-d1f5-4610-806f-5041067732d3');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b7d04747-43cc-4e4c-b94a-1a82156159c6\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b7d04747-43cc-4e4c-b94a-1a82156159c6')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b7d04747-43cc-4e4c-b94a-1a82156159c6 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":28}]},{"cell_type":"code","source":["df['Total_cost'] = df['UnitPrice']*df['Quantity']\n","monetary_df=df.groupby('CustomerID',as_index=False)['Total_cost'].sum()\n","monetary_df.columns = ['CustomerID','Monetary']\n","monetary_df.head()\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"u13d5G1gaSCS","executionInfo":{"status":"ok","timestamp":1693528434592,"user_tz":-540,"elapsed":13,"user":{"displayName":"ÏµúÏó∞Í≤Ω","userId":"07593915359092771547"}},"outputId":"73b1f653-4071-4e19-8175-a03ef739a74f"},"execution_count":29,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   CustomerID  Monetary\n","0     12346.0  77183.60\n","1     12347.0   4310.00\n","2     12348.0   1797.24\n","3     12349.0   1757.55\n","4     12350.0    334.40"],"text/html":["\n","  <div id=\"df-3d9bdb37-429e-4816-8689-5077d8ede08a\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>CustomerID</th>\n","      <th>Monetary</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>12346.0</td>\n","      <td>77183.60</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>12347.0</td>\n","      <td>4310.00</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>12348.0</td>\n","      <td>1797.24</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>12349.0</td>\n","      <td>1757.55</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>12350.0</td>\n","      <td>334.40</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-3d9bdb37-429e-4816-8689-5077d8ede08a')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-3d9bdb37-429e-4816-8689-5077d8ede08a button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-3d9bdb37-429e-4816-8689-5077d8ede08a');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9dbbf599-8531-431a-b017-ae4d401aad34\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9dbbf599-8531-431a-b017-ae4d401aad34')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9dbbf599-8531-431a-b017-ae4d401aad34 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":29}]},{"cell_type":"code","source":["df['Monetary'] = monetary_df['Monetary']"],"metadata":{"id":"37tAO-TSaS5N","executionInfo":{"status":"ok","timestamp":1693528434592,"user_tz":-540,"elapsed":13,"user":{"displayName":"ÏµúÏó∞Í≤Ω","userId":"07593915359092771547"}}},"execution_count":30,"outputs":[]},{"cell_type":"code","source":["df.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":417},"id":"uqenWbErFn2S","executionInfo":{"status":"ok","timestamp":1693528434592,"user_tz":-540,"elapsed":12,"user":{"displayName":"ÏµúÏó∞Í≤Ω","userId":"07593915359092771547"}},"outputId":"a0decf88-d949-4bd8-e20d-7ab65c848bd3"},"execution_count":31,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  InvoiceNo StockCode                          Description  Quantity  \\\n","0    536365    85123A   WHITE HANGING HEART T-LIGHT HOLDER         6   \n","1    536365     71053                  WHITE METAL LANTERN         6   \n","2    536365    84406B       CREAM CUPID HEARTS COAT HANGER         8   \n","3    536365    84029G  KNITTED UNION FLAG HOT WATER BOTTLE         6   \n","4    536365    84029E       RED WOOLLY HOTTIE WHITE HEART.         6   \n","\n","      InvoiceDate  UnitPrice  CustomerID         Country       Date  Recency  \\\n","0  12/1/2010 8:26       2.55     17850.0  United Kingdom 2010-12-01    325.0   \n","1  12/1/2010 8:26       3.39     17850.0  United Kingdom 2010-12-01      2.0   \n","2  12/1/2010 8:26       2.75     17850.0  United Kingdom 2010-12-01     75.0   \n","3  12/1/2010 8:26       3.39     17850.0  United Kingdom 2010-12-01     18.0   \n","4  12/1/2010 8:26       3.39     17850.0  United Kingdom 2010-12-01    310.0   \n","\n","   Frequency  Total_cost  Monetary  \n","0        1.0       15.30  77183.60  \n","1        7.0       20.34   4310.00  \n","2        4.0       22.00   1797.24  \n","3        1.0       20.34   1757.55  \n","4        1.0       20.34    334.40  "],"text/html":["\n","  <div id=\"df-e248dbb4-0b72-4c69-93e1-dfe49e37d4e0\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>InvoiceNo</th>\n","      <th>StockCode</th>\n","      <th>Description</th>\n","      <th>Quantity</th>\n","      <th>InvoiceDate</th>\n","      <th>UnitPrice</th>\n","      <th>CustomerID</th>\n","      <th>Country</th>\n","      <th>Date</th>\n","      <th>Recency</th>\n","      <th>Frequency</th>\n","      <th>Total_cost</th>\n","      <th>Monetary</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>536365</td>\n","      <td>85123A</td>\n","      <td>WHITE HANGING HEART T-LIGHT HOLDER</td>\n","      <td>6</td>\n","      <td>12/1/2010 8:26</td>\n","      <td>2.55</td>\n","      <td>17850.0</td>\n","      <td>United Kingdom</td>\n","      <td>2010-12-01</td>\n","      <td>325.0</td>\n","      <td>1.0</td>\n","      <td>15.30</td>\n","      <td>77183.60</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>536365</td>\n","      <td>71053</td>\n","      <td>WHITE METAL LANTERN</td>\n","      <td>6</td>\n","      <td>12/1/2010 8:26</td>\n","      <td>3.39</td>\n","      <td>17850.0</td>\n","      <td>United Kingdom</td>\n","      <td>2010-12-01</td>\n","      <td>2.0</td>\n","      <td>7.0</td>\n","      <td>20.34</td>\n","      <td>4310.00</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>536365</td>\n","      <td>84406B</td>\n","      <td>CREAM CUPID HEARTS COAT HANGER</td>\n","      <td>8</td>\n","      <td>12/1/2010 8:26</td>\n","      <td>2.75</td>\n","      <td>17850.0</td>\n","      <td>United Kingdom</td>\n","      <td>2010-12-01</td>\n","      <td>75.0</td>\n","      <td>4.0</td>\n","      <td>22.00</td>\n","      <td>1797.24</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>536365</td>\n","      <td>84029G</td>\n","      <td>KNITTED UNION FLAG HOT WATER BOTTLE</td>\n","      <td>6</td>\n","      <td>12/1/2010 8:26</td>\n","      <td>3.39</td>\n","      <td>17850.0</td>\n","      <td>United Kingdom</td>\n","      <td>2010-12-01</td>\n","      <td>18.0</td>\n","      <td>1.0</td>\n","      <td>20.34</td>\n","      <td>1757.55</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>536365</td>\n","      <td>84029E</td>\n","      <td>RED WOOLLY HOTTIE WHITE HEART.</td>\n","      <td>6</td>\n","      <td>12/1/2010 8:26</td>\n","      <td>3.39</td>\n","      <td>17850.0</td>\n","      <td>United Kingdom</td>\n","      <td>2010-12-01</td>\n","      <td>310.0</td>\n","      <td>1.0</td>\n","      <td>20.34</td>\n","      <td>334.40</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e248dbb4-0b72-4c69-93e1-dfe49e37d4e0')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e248dbb4-0b72-4c69-93e1-dfe49e37d4e0 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e248dbb4-0b72-4c69-93e1-dfe49e37d4e0');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-31215460-3e1c-4a9c-a81a-35826e31ef56\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-31215460-3e1c-4a9c-a81a-35826e31ef56')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-31215460-3e1c-4a9c-a81a-35826e31ef56 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":31}]},{"cell_type":"code","source":["# ‚ñ∂ Data merge\n","\n","rf = recency_df.merge(frequency_df,how='left',on='CustomerID')\n","rfm = rf.merge(monetary_df,how='left',on='CustomerID')\n","\n","rfm.head(5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"-9rTLKr5Furt","executionInfo":{"status":"ok","timestamp":1693528434592,"user_tz":-540,"elapsed":12,"user":{"displayName":"ÏµúÏó∞Í≤Ω","userId":"07593915359092771547"}},"outputId":"89f27b02-b4fa-457c-a6d6-13d0c19fde3a"},"execution_count":32,"outputs":[{"output_type":"execute_result","data":{"text/plain":["   CustomerID LastPurchaseDate  Recency  Frequency  Monetary\n","0     12346.0       2011-01-18      325          1  77183.60\n","1     12347.0       2011-12-07        2          7   4310.00\n","2     12348.0       2011-09-25       75          4   1797.24\n","3     12349.0       2011-11-21       18          1   1757.55\n","4     12350.0       2011-02-02      310          1    334.40"],"text/html":["\n","  <div id=\"df-13500ff0-83dc-4135-8b13-b86ca49d4df3\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>CustomerID</th>\n","      <th>LastPurchaseDate</th>\n","      <th>Recency</th>\n","      <th>Frequency</th>\n","      <th>Monetary</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>12346.0</td>\n","      <td>2011-01-18</td>\n","      <td>325</td>\n","      <td>1</td>\n","      <td>77183.60</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>12347.0</td>\n","      <td>2011-12-07</td>\n","      <td>2</td>\n","      <td>7</td>\n","      <td>4310.00</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>12348.0</td>\n","      <td>2011-09-25</td>\n","      <td>75</td>\n","      <td>4</td>\n","      <td>1797.24</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>12349.0</td>\n","      <td>2011-11-21</td>\n","      <td>18</td>\n","      <td>1</td>\n","      <td>1757.55</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>12350.0</td>\n","      <td>2011-02-02</td>\n","      <td>310</td>\n","      <td>1</td>\n","      <td>334.40</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-13500ff0-83dc-4135-8b13-b86ca49d4df3')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-13500ff0-83dc-4135-8b13-b86ca49d4df3 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-13500ff0-83dc-4135-8b13-b86ca49d4df3');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-84d09fba-242b-412c-8104-e182ea0d42f1\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-84d09fba-242b-412c-8104-e182ea0d42f1')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-84d09fba-242b-412c-8104-e182ea0d42f1 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":32}]},{"cell_type":"markdown","source":["## **RFM ÌôúÏö© ÏÑúÎπÑÏä§ Ïù¥Ïö© ÏàòÏ§Ä Ï∏°Ï†ï**  \n","---\n"],"metadata":{"id":"IxhhZPrJGBsQ"}},{"cell_type":"markdown","source":["### ¬∑ Scailing Data\n","---"],"metadata":{"id":"Ki0Ye5OlGHSZ"}},{"cell_type":"code","source":["from sklearn.preprocessing import minmax_scale\n","\n","rfm['Recency'] = minmax_scale(rfm['Recency'], axis=0, copy=True)\n","rfm['Recency'] = 1-rfm['Recency']\n","\n","rfm['Frequency'] = minmax_scale(rfm['Frequency'], axis=0, copy=True)\n","\n","rfm['Monetary'] = minmax_scale(rfm['Monetary'], axis=0, copy=True)\n","\n","rfm['Score']=rfm['Recency']+rfm['Frequency']+rfm['Monetary']\n","rfm"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"p4InXvEQF-uU","executionInfo":{"status":"ok","timestamp":1693528434592,"user_tz":-540,"elapsed":11,"user":{"displayName":"ÏµúÏó∞Í≤Ω","userId":"07593915359092771547"}},"outputId":"ffc377db-513f-46d6-b79c-23f2d05d3433"},"execution_count":33,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      CustomerID LastPurchaseDate   Recency  Frequency  Monetary     Score\n","0        12346.0       2011-01-18  0.128686   0.000000  0.275443  0.404130\n","1        12347.0       2011-12-07  0.994638   0.028846  0.015368  1.038853\n","2        12348.0       2011-09-25  0.798928   0.014423  0.006401  0.819751\n","3        12349.0       2011-11-21  0.951743   0.000000  0.006259  0.958002\n","4        12350.0       2011-02-02  0.168901   0.000000  0.001180  0.170081\n","...          ...              ...       ...        ...       ...       ...\n","4333     18280.0       2011-03-07  0.257373   0.000000  0.000631  0.258004\n","4334     18281.0       2011-06-12  0.517426   0.000000  0.000275  0.517701\n","4335     18282.0       2011-12-02  0.981233   0.004808  0.000622  0.986663\n","4336     18283.0       2011-12-06  0.991957   0.072115  0.007463  1.071535\n","4337     18287.0       2011-10-28  0.887399   0.009615  0.006544  0.903558\n","\n","[4338 rows x 6 columns]"],"text/html":["\n","  <div id=\"df-ec7e7cc5-55b7-4a3f-8317-4fdc8810e9e8\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>CustomerID</th>\n","      <th>LastPurchaseDate</th>\n","      <th>Recency</th>\n","      <th>Frequency</th>\n","      <th>Monetary</th>\n","      <th>Score</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>12346.0</td>\n","      <td>2011-01-18</td>\n","      <td>0.128686</td>\n","      <td>0.000000</td>\n","      <td>0.275443</td>\n","      <td>0.404130</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>12347.0</td>\n","      <td>2011-12-07</td>\n","      <td>0.994638</td>\n","      <td>0.028846</td>\n","      <td>0.015368</td>\n","      <td>1.038853</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>12348.0</td>\n","      <td>2011-09-25</td>\n","      <td>0.798928</td>\n","      <td>0.014423</td>\n","      <td>0.006401</td>\n","      <td>0.819751</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>12349.0</td>\n","      <td>2011-11-21</td>\n","      <td>0.951743</td>\n","      <td>0.000000</td>\n","      <td>0.006259</td>\n","      <td>0.958002</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>12350.0</td>\n","      <td>2011-02-02</td>\n","      <td>0.168901</td>\n","      <td>0.000000</td>\n","      <td>0.001180</td>\n","      <td>0.170081</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>4333</th>\n","      <td>18280.0</td>\n","      <td>2011-03-07</td>\n","      <td>0.257373</td>\n","      <td>0.000000</td>\n","      <td>0.000631</td>\n","      <td>0.258004</td>\n","    </tr>\n","    <tr>\n","      <th>4334</th>\n","      <td>18281.0</td>\n","      <td>2011-06-12</td>\n","      <td>0.517426</td>\n","      <td>0.000000</td>\n","      <td>0.000275</td>\n","      <td>0.517701</td>\n","    </tr>\n","    <tr>\n","      <th>4335</th>\n","      <td>18282.0</td>\n","      <td>2011-12-02</td>\n","      <td>0.981233</td>\n","      <td>0.004808</td>\n","      <td>0.000622</td>\n","      <td>0.986663</td>\n","    </tr>\n","    <tr>\n","      <th>4336</th>\n","      <td>18283.0</td>\n","      <td>2011-12-06</td>\n","      <td>0.991957</td>\n","      <td>0.072115</td>\n","      <td>0.007463</td>\n","      <td>1.071535</td>\n","    </tr>\n","    <tr>\n","      <th>4337</th>\n","      <td>18287.0</td>\n","      <td>2011-10-28</td>\n","      <td>0.887399</td>\n","      <td>0.009615</td>\n","      <td>0.006544</td>\n","      <td>0.903558</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4338 rows √ó 6 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-ec7e7cc5-55b7-4a3f-8317-4fdc8810e9e8')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-ec7e7cc5-55b7-4a3f-8317-4fdc8810e9e8 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-ec7e7cc5-55b7-4a3f-8317-4fdc8810e9e8');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-9676cf75-e84b-49f5-a4eb-2d5700c88a4c\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-9676cf75-e84b-49f5-a4eb-2d5700c88a4c')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-9676cf75-e84b-49f5-a4eb-2d5700c88a4c button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":33}]},{"cell_type":"code","source":["rfm['Score'] = minmax_scale(rfm['Score'], axis=0, copy=True)*100\n","rfm.Score"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"f2myxjr4IJ5A","executionInfo":{"status":"ok","timestamp":1693528434592,"user_tz":-540,"elapsed":11,"user":{"displayName":"ÏµúÏó∞Í≤Ω","userId":"07593915359092771547"}},"outputId":"812362f4-901a-4f15-cbd0-809cbf3f8e9a"},"execution_count":34,"outputs":[{"output_type":"execute_result","data":{"text/plain":["0       16.338239\n","1       42.016150\n","2       33.152343\n","3       38.745301\n","4        6.869722\n","          ...    \n","4333    10.426672\n","4334    20.932815\n","4335    39.904803\n","4336    43.338344\n","4337    36.542784\n","Name: Score, Length: 4338, dtype: float64"]},"metadata":{},"execution_count":34}]},{"cell_type":"markdown","source":["### ¬∑ Grade(Ï†êÏàò) Íµ¨Í∞ÑÌôî\n","---"],"metadata":{"id":"1A9DZ9Y7JM2T"}},{"cell_type":"code","source":["sns.displot(rfm['Score']);"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":507},"id":"BfReB6TaI-H2","executionInfo":{"status":"ok","timestamp":1693528435117,"user_tz":-540,"elapsed":533,"user":{"displayName":"ÏµúÏó∞Í≤Ω","userId":"07593915359092771547"}},"outputId":"577d6c74-aa4d-467b-d3b2-ecd4ca95149f"},"execution_count":35,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 500x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["rfm['Grade'] = rfm['Score'].apply(lambda x: 'vvip' if x>= 60 else ('vip' if x>= 40 else ('Gold' if x>= 20 else ('Silver' if x>=10 else 'White'))))\n","rfm"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":424},"id":"28fBlMQGJTIb","executionInfo":{"status":"ok","timestamp":1693528435117,"user_tz":-540,"elapsed":6,"user":{"displayName":"ÏµúÏó∞Í≤Ω","userId":"07593915359092771547"}},"outputId":"73856ecf-f9ed-4fe4-8135-038d8f522c42"},"execution_count":36,"outputs":[{"output_type":"execute_result","data":{"text/plain":["      CustomerID LastPurchaseDate   Recency  Frequency  Monetary      Score  \\\n","0        12346.0       2011-01-18  0.128686   0.000000  0.275443  16.338239   \n","1        12347.0       2011-12-07  0.994638   0.028846  0.015368  42.016150   \n","2        12348.0       2011-09-25  0.798928   0.014423  0.006401  33.152343   \n","3        12349.0       2011-11-21  0.951743   0.000000  0.006259  38.745301   \n","4        12350.0       2011-02-02  0.168901   0.000000  0.001180   6.869722   \n","...          ...              ...       ...        ...       ...        ...   \n","4333     18280.0       2011-03-07  0.257373   0.000000  0.000631  10.426672   \n","4334     18281.0       2011-06-12  0.517426   0.000000  0.000275  20.932815   \n","4335     18282.0       2011-12-02  0.981233   0.004808  0.000622  39.904803   \n","4336     18283.0       2011-12-06  0.991957   0.072115  0.007463  43.338344   \n","4337     18287.0       2011-10-28  0.887399   0.009615  0.006544  36.542784   \n","\n","       Grade  \n","0     Silver  \n","1        vip  \n","2       Gold  \n","3       Gold  \n","4      White  \n","...      ...  \n","4333  Silver  \n","4334    Gold  \n","4335    Gold  \n","4336     vip  \n","4337    Gold  \n","\n","[4338 rows x 7 columns]"],"text/html":["\n","  <div id=\"df-5870721d-cb0a-4f97-b7d2-d0893ffcfd8c\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>CustomerID</th>\n","      <th>LastPurchaseDate</th>\n","      <th>Recency</th>\n","      <th>Frequency</th>\n","      <th>Monetary</th>\n","      <th>Score</th>\n","      <th>Grade</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>12346.0</td>\n","      <td>2011-01-18</td>\n","      <td>0.128686</td>\n","      <td>0.000000</td>\n","      <td>0.275443</td>\n","      <td>16.338239</td>\n","      <td>Silver</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>12347.0</td>\n","      <td>2011-12-07</td>\n","      <td>0.994638</td>\n","      <td>0.028846</td>\n","      <td>0.015368</td>\n","      <td>42.016150</td>\n","      <td>vip</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>12348.0</td>\n","      <td>2011-09-25</td>\n","      <td>0.798928</td>\n","      <td>0.014423</td>\n","      <td>0.006401</td>\n","      <td>33.152343</td>\n","      <td>Gold</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>12349.0</td>\n","      <td>2011-11-21</td>\n","      <td>0.951743</td>\n","      <td>0.000000</td>\n","      <td>0.006259</td>\n","      <td>38.745301</td>\n","      <td>Gold</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>12350.0</td>\n","      <td>2011-02-02</td>\n","      <td>0.168901</td>\n","      <td>0.000000</td>\n","      <td>0.001180</td>\n","      <td>6.869722</td>\n","      <td>White</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>4333</th>\n","      <td>18280.0</td>\n","      <td>2011-03-07</td>\n","      <td>0.257373</td>\n","      <td>0.000000</td>\n","      <td>0.000631</td>\n","      <td>10.426672</td>\n","      <td>Silver</td>\n","    </tr>\n","    <tr>\n","      <th>4334</th>\n","      <td>18281.0</td>\n","      <td>2011-06-12</td>\n","      <td>0.517426</td>\n","      <td>0.000000</td>\n","      <td>0.000275</td>\n","      <td>20.932815</td>\n","      <td>Gold</td>\n","    </tr>\n","    <tr>\n","      <th>4335</th>\n","      <td>18282.0</td>\n","      <td>2011-12-02</td>\n","      <td>0.981233</td>\n","      <td>0.004808</td>\n","      <td>0.000622</td>\n","      <td>39.904803</td>\n","      <td>Gold</td>\n","    </tr>\n","    <tr>\n","      <th>4336</th>\n","      <td>18283.0</td>\n","      <td>2011-12-06</td>\n","      <td>0.991957</td>\n","      <td>0.072115</td>\n","      <td>0.007463</td>\n","      <td>43.338344</td>\n","      <td>vip</td>\n","    </tr>\n","    <tr>\n","      <th>4337</th>\n","      <td>18287.0</td>\n","      <td>2011-10-28</td>\n","      <td>0.887399</td>\n","      <td>0.009615</td>\n","      <td>0.006544</td>\n","      <td>36.542784</td>\n","      <td>Gold</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>4338 rows √ó 7 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-5870721d-cb0a-4f97-b7d2-d0893ffcfd8c')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-5870721d-cb0a-4f97-b7d2-d0893ffcfd8c button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-5870721d-cb0a-4f97-b7d2-d0893ffcfd8c');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-699e3142-66cb-4eba-bcbe-73e9a4942a32\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-699e3142-66cb-4eba-bcbe-73e9a4942a32')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-699e3142-66cb-4eba-bcbe-73e9a4942a32 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":36}]},{"cell_type":"code","source":["df = pd.merge(df, rfm, how='left', on='CustomerID')\n","df.head(5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":417},"id":"uHfY2r41KeFq","executionInfo":{"status":"ok","timestamp":1693528435504,"user_tz":-540,"elapsed":392,"user":{"displayName":"ÏµúÏó∞Í≤Ω","userId":"07593915359092771547"}},"outputId":"b36493c4-6a73-4b00-f2cd-b2114745d97d"},"execution_count":37,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  InvoiceNo StockCode                          Description  Quantity  \\\n","0    536365    85123A   WHITE HANGING HEART T-LIGHT HOLDER         6   \n","1    536365     71053                  WHITE METAL LANTERN         6   \n","2    536365    84406B       CREAM CUPID HEARTS COAT HANGER         8   \n","3    536365    84029G  KNITTED UNION FLAG HOT WATER BOTTLE         6   \n","4    536365    84029E       RED WOOLLY HOTTIE WHITE HEART.         6   \n","\n","      InvoiceDate  UnitPrice  CustomerID         Country       Date  \\\n","0  12/1/2010 8:26       2.55     17850.0  United Kingdom 2010-12-01   \n","1  12/1/2010 8:26       3.39     17850.0  United Kingdom 2010-12-01   \n","2  12/1/2010 8:26       2.75     17850.0  United Kingdom 2010-12-01   \n","3  12/1/2010 8:26       3.39     17850.0  United Kingdom 2010-12-01   \n","4  12/1/2010 8:26       3.39     17850.0  United Kingdom 2010-12-01   \n","\n","   Recency_x  Frequency_x  Total_cost  Monetary_x LastPurchaseDate  Recency_y  \\\n","0      325.0          1.0       15.30    77183.60       2010-12-02   0.002681   \n","1        2.0          7.0       20.34     4310.00       2010-12-02   0.002681   \n","2       75.0          4.0       22.00     1797.24       2010-12-02   0.002681   \n","3       18.0          1.0       20.34     1757.55       2010-12-02   0.002681   \n","4      310.0          1.0       20.34      334.40       2010-12-02   0.002681   \n","\n","   Frequency_y  Monetary_y     Score  Grade  \n","0     0.158654    0.019227  7.293734  White  \n","1     0.158654    0.019227  7.293734  White  \n","2     0.158654    0.019227  7.293734  White  \n","3     0.158654    0.019227  7.293734  White  \n","4     0.158654    0.019227  7.293734  White  "],"text/html":["\n","  <div id=\"df-8a881b3a-397b-4312-9028-b82b45388241\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>InvoiceNo</th>\n","      <th>StockCode</th>\n","      <th>Description</th>\n","      <th>Quantity</th>\n","      <th>InvoiceDate</th>\n","      <th>UnitPrice</th>\n","      <th>CustomerID</th>\n","      <th>Country</th>\n","      <th>Date</th>\n","      <th>Recency_x</th>\n","      <th>Frequency_x</th>\n","      <th>Total_cost</th>\n","      <th>Monetary_x</th>\n","      <th>LastPurchaseDate</th>\n","      <th>Recency_y</th>\n","      <th>Frequency_y</th>\n","      <th>Monetary_y</th>\n","      <th>Score</th>\n","      <th>Grade</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>536365</td>\n","      <td>85123A</td>\n","      <td>WHITE HANGING HEART T-LIGHT HOLDER</td>\n","      <td>6</td>\n","      <td>12/1/2010 8:26</td>\n","      <td>2.55</td>\n","      <td>17850.0</td>\n","      <td>United Kingdom</td>\n","      <td>2010-12-01</td>\n","      <td>325.0</td>\n","      <td>1.0</td>\n","      <td>15.30</td>\n","      <td>77183.60</td>\n","      <td>2010-12-02</td>\n","      <td>0.002681</td>\n","      <td>0.158654</td>\n","      <td>0.019227</td>\n","      <td>7.293734</td>\n","      <td>White</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>536365</td>\n","      <td>71053</td>\n","      <td>WHITE METAL LANTERN</td>\n","      <td>6</td>\n","      <td>12/1/2010 8:26</td>\n","      <td>3.39</td>\n","      <td>17850.0</td>\n","      <td>United Kingdom</td>\n","      <td>2010-12-01</td>\n","      <td>2.0</td>\n","      <td>7.0</td>\n","      <td>20.34</td>\n","      <td>4310.00</td>\n","      <td>2010-12-02</td>\n","      <td>0.002681</td>\n","      <td>0.158654</td>\n","      <td>0.019227</td>\n","      <td>7.293734</td>\n","      <td>White</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>536365</td>\n","      <td>84406B</td>\n","      <td>CREAM CUPID HEARTS COAT HANGER</td>\n","      <td>8</td>\n","      <td>12/1/2010 8:26</td>\n","      <td>2.75</td>\n","      <td>17850.0</td>\n","      <td>United Kingdom</td>\n","      <td>2010-12-01</td>\n","      <td>75.0</td>\n","      <td>4.0</td>\n","      <td>22.00</td>\n","      <td>1797.24</td>\n","      <td>2010-12-02</td>\n","      <td>0.002681</td>\n","      <td>0.158654</td>\n","      <td>0.019227</td>\n","      <td>7.293734</td>\n","      <td>White</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>536365</td>\n","      <td>84029G</td>\n","      <td>KNITTED UNION FLAG HOT WATER BOTTLE</td>\n","      <td>6</td>\n","      <td>12/1/2010 8:26</td>\n","      <td>3.39</td>\n","      <td>17850.0</td>\n","      <td>United Kingdom</td>\n","      <td>2010-12-01</td>\n","      <td>18.0</td>\n","      <td>1.0</td>\n","      <td>20.34</td>\n","      <td>1757.55</td>\n","      <td>2010-12-02</td>\n","      <td>0.002681</td>\n","      <td>0.158654</td>\n","      <td>0.019227</td>\n","      <td>7.293734</td>\n","      <td>White</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>536365</td>\n","      <td>84029E</td>\n","      <td>RED WOOLLY HOTTIE WHITE HEART.</td>\n","      <td>6</td>\n","      <td>12/1/2010 8:26</td>\n","      <td>3.39</td>\n","      <td>17850.0</td>\n","      <td>United Kingdom</td>\n","      <td>2010-12-01</td>\n","      <td>310.0</td>\n","      <td>1.0</td>\n","      <td>20.34</td>\n","      <td>334.40</td>\n","      <td>2010-12-02</td>\n","      <td>0.002681</td>\n","      <td>0.158654</td>\n","      <td>0.019227</td>\n","      <td>7.293734</td>\n","      <td>White</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-8a881b3a-397b-4312-9028-b82b45388241')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-8a881b3a-397b-4312-9028-b82b45388241 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-8a881b3a-397b-4312-9028-b82b45388241');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-2d7528e2-41b6-4739-a4d9-a6f3238f8bf3\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-2d7528e2-41b6-4739-a4d9-a6f3238f8bf3')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-2d7528e2-41b6-4739-a4d9-a6f3238f8bf3 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":37}]},{"cell_type":"markdown","source":["### ¬∑ ÏßÄÌëú Í∏∞Ìöç"],"metadata":{"id":"Dzfu80FJLwiU"}},{"cell_type":"markdown","source":["#### ¬∑ Ïõî Î≥Ñ Ïù¥Ïö© Í≥†Í∞ù ÌòÑÌô©\n","---"],"metadata":{"id":"WKZjNFkQLys-"}},{"cell_type":"code","source":["df['Date_1'] = df[\"Date\"].dt.strftime(\"%Y-%m\")\n","df.head(5)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":417},"id":"sHYd6efSLehS","executionInfo":{"status":"ok","timestamp":1693528436869,"user_tz":-540,"elapsed":1368,"user":{"displayName":"ÏµúÏó∞Í≤Ω","userId":"07593915359092771547"}},"outputId":"58d65c68-e94a-48e8-93b6-8a0618ea802d"},"execution_count":38,"outputs":[{"output_type":"execute_result","data":{"text/plain":["  InvoiceNo StockCode                          Description  Quantity  \\\n","0    536365    85123A   WHITE HANGING HEART T-LIGHT HOLDER         6   \n","1    536365     71053                  WHITE METAL LANTERN         6   \n","2    536365    84406B       CREAM CUPID HEARTS COAT HANGER         8   \n","3    536365    84029G  KNITTED UNION FLAG HOT WATER BOTTLE         6   \n","4    536365    84029E       RED WOOLLY HOTTIE WHITE HEART.         6   \n","\n","      InvoiceDate  UnitPrice  CustomerID         Country       Date  \\\n","0  12/1/2010 8:26       2.55     17850.0  United Kingdom 2010-12-01   \n","1  12/1/2010 8:26       3.39     17850.0  United Kingdom 2010-12-01   \n","2  12/1/2010 8:26       2.75     17850.0  United Kingdom 2010-12-01   \n","3  12/1/2010 8:26       3.39     17850.0  United Kingdom 2010-12-01   \n","4  12/1/2010 8:26       3.39     17850.0  United Kingdom 2010-12-01   \n","\n","   Recency_x  Frequency_x  Total_cost  Monetary_x LastPurchaseDate  Recency_y  \\\n","0      325.0          1.0       15.30    77183.60       2010-12-02   0.002681   \n","1        2.0          7.0       20.34     4310.00       2010-12-02   0.002681   \n","2       75.0          4.0       22.00     1797.24       2010-12-02   0.002681   \n","3       18.0          1.0       20.34     1757.55       2010-12-02   0.002681   \n","4      310.0          1.0       20.34      334.40       2010-12-02   0.002681   \n","\n","   Frequency_y  Monetary_y     Score  Grade   Date_1  \n","0     0.158654    0.019227  7.293734  White  2010-12  \n","1     0.158654    0.019227  7.293734  White  2010-12  \n","2     0.158654    0.019227  7.293734  White  2010-12  \n","3     0.158654    0.019227  7.293734  White  2010-12  \n","4     0.158654    0.019227  7.293734  White  2010-12  "],"text/html":["\n","  <div id=\"df-834529ec-cdcb-4e9a-a57f-7370c973cc23\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>InvoiceNo</th>\n","      <th>StockCode</th>\n","      <th>Description</th>\n","      <th>Quantity</th>\n","      <th>InvoiceDate</th>\n","      <th>UnitPrice</th>\n","      <th>CustomerID</th>\n","      <th>Country</th>\n","      <th>Date</th>\n","      <th>Recency_x</th>\n","      <th>Frequency_x</th>\n","      <th>Total_cost</th>\n","      <th>Monetary_x</th>\n","      <th>LastPurchaseDate</th>\n","      <th>Recency_y</th>\n","      <th>Frequency_y</th>\n","      <th>Monetary_y</th>\n","      <th>Score</th>\n","      <th>Grade</th>\n","      <th>Date_1</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>536365</td>\n","      <td>85123A</td>\n","      <td>WHITE HANGING HEART T-LIGHT HOLDER</td>\n","      <td>6</td>\n","      <td>12/1/2010 8:26</td>\n","      <td>2.55</td>\n","      <td>17850.0</td>\n","      <td>United Kingdom</td>\n","      <td>2010-12-01</td>\n","      <td>325.0</td>\n","      <td>1.0</td>\n","      <td>15.30</td>\n","      <td>77183.60</td>\n","      <td>2010-12-02</td>\n","      <td>0.002681</td>\n","      <td>0.158654</td>\n","      <td>0.019227</td>\n","      <td>7.293734</td>\n","      <td>White</td>\n","      <td>2010-12</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>536365</td>\n","      <td>71053</td>\n","      <td>WHITE METAL LANTERN</td>\n","      <td>6</td>\n","      <td>12/1/2010 8:26</td>\n","      <td>3.39</td>\n","      <td>17850.0</td>\n","      <td>United Kingdom</td>\n","      <td>2010-12-01</td>\n","      <td>2.0</td>\n","      <td>7.0</td>\n","      <td>20.34</td>\n","      <td>4310.00</td>\n","      <td>2010-12-02</td>\n","      <td>0.002681</td>\n","      <td>0.158654</td>\n","      <td>0.019227</td>\n","      <td>7.293734</td>\n","      <td>White</td>\n","      <td>2010-12</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>536365</td>\n","      <td>84406B</td>\n","      <td>CREAM CUPID HEARTS COAT HANGER</td>\n","      <td>8</td>\n","      <td>12/1/2010 8:26</td>\n","      <td>2.75</td>\n","      <td>17850.0</td>\n","      <td>United Kingdom</td>\n","      <td>2010-12-01</td>\n","      <td>75.0</td>\n","      <td>4.0</td>\n","      <td>22.00</td>\n","      <td>1797.24</td>\n","      <td>2010-12-02</td>\n","      <td>0.002681</td>\n","      <td>0.158654</td>\n","      <td>0.019227</td>\n","      <td>7.293734</td>\n","      <td>White</td>\n","      <td>2010-12</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>536365</td>\n","      <td>84029G</td>\n","      <td>KNITTED UNION FLAG HOT WATER BOTTLE</td>\n","      <td>6</td>\n","      <td>12/1/2010 8:26</td>\n","      <td>3.39</td>\n","      <td>17850.0</td>\n","      <td>United Kingdom</td>\n","      <td>2010-12-01</td>\n","      <td>18.0</td>\n","      <td>1.0</td>\n","      <td>20.34</td>\n","      <td>1757.55</td>\n","      <td>2010-12-02</td>\n","      <td>0.002681</td>\n","      <td>0.158654</td>\n","      <td>0.019227</td>\n","      <td>7.293734</td>\n","      <td>White</td>\n","      <td>2010-12</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>536365</td>\n","      <td>84029E</td>\n","      <td>RED WOOLLY HOTTIE WHITE HEART.</td>\n","      <td>6</td>\n","      <td>12/1/2010 8:26</td>\n","      <td>3.39</td>\n","      <td>17850.0</td>\n","      <td>United Kingdom</td>\n","      <td>2010-12-01</td>\n","      <td>310.0</td>\n","      <td>1.0</td>\n","      <td>20.34</td>\n","      <td>334.40</td>\n","      <td>2010-12-02</td>\n","      <td>0.002681</td>\n","      <td>0.158654</td>\n","      <td>0.019227</td>\n","      <td>7.293734</td>\n","      <td>White</td>\n","      <td>2010-12</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-834529ec-cdcb-4e9a-a57f-7370c973cc23')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-834529ec-cdcb-4e9a-a57f-7370c973cc23 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-834529ec-cdcb-4e9a-a57f-7370c973cc23');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-73824498-1a95-4dba-932b-1e85320a2e02\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-73824498-1a95-4dba-932b-1e85320a2e02')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-73824498-1a95-4dba-932b-1e85320a2e02 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":38}]},{"cell_type":"code","source":["# ‚ñ∂ ÏõîÎ≥Ñ Ïù¥Ïö© Í≥†Í∞ù ÌòÑÌô©\n","df_cus = df.groupby('Date_1',as_index=False)['CustomerID'].nunique()\n","df_cus.head()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":206},"id":"ZlhsCeNCLpLD","executionInfo":{"status":"ok","timestamp":1693528436870,"user_tz":-540,"elapsed":4,"user":{"displayName":"ÏµúÏó∞Í≤Ω","userId":"07593915359092771547"}},"outputId":"d340b2dd-fdcc-4841-894e-d73ff232fa3a"},"execution_count":39,"outputs":[{"output_type":"execute_result","data":{"text/plain":["    Date_1  CustomerID\n","0  2010-12         885\n","1  2011-01         741\n","2  2011-02         758\n","3  2011-03         974\n","4  2011-04         856"],"text/html":["\n","  <div id=\"df-81fc4ac2-bfde-42e1-8467-19768abfb049\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date_1</th>\n","      <th>CustomerID</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2010-12</td>\n","      <td>885</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2011-01</td>\n","      <td>741</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2011-02</td>\n","      <td>758</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2011-03</td>\n","      <td>974</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2011-04</td>\n","      <td>856</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-81fc4ac2-bfde-42e1-8467-19768abfb049')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-81fc4ac2-bfde-42e1-8467-19768abfb049 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-81fc4ac2-bfde-42e1-8467-19768abfb049');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-261c0eca-1692-47b2-ac9e-83f09ebd0076\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-261c0eca-1692-47b2-ac9e-83f09ebd0076')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-261c0eca-1692-47b2-ac9e-83f09ebd0076 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":39}]},{"cell_type":"code","source":["plt.plot(df_cus['Date_1'], df_cus['CustomerID'], label='Customer');\n","plt.legend();\n","plt.gcf().set_size_inches(25, 5)\n","#12ÏõîÎã¨ÏóêÎäî Îç∞Ïù¥ÌÑ∞Î•º 9Ïùº ÍπåÏßÄÎ∞ñÏóê ÏàòÏßëÌïòÏßÄ Î™ªÌñàÍ∏∞ ÎïåÎ¨∏Ïóê ÏàòÏπòÍ∞Ä ÎÇÆÏùå"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":234},"id":"rLeU-W_FL1G-","executionInfo":{"status":"ok","timestamp":1693528437461,"user_tz":-540,"elapsed":594,"user":{"displayName":"ÏµúÏó∞Í≤Ω","userId":"07593915359092771547"}},"outputId":"5cbccb72-98ca-4488-bd8d-f2f0d4368ff4"},"execution_count":40,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 2500x500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"markdown","source":["#### ¬∑ Ïõî Î≥Ñ Ïù¥Ïö© Í±¥Ïàò\n","---"],"metadata":{"id":"TLERboE9MZpE"}},{"cell_type":"code","source":["df_cnt = df.groupby('Date_1',as_index=False)['InvoiceNo'].nunique()\n","df_cnt"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":457},"id":"GGH_L9ynMKbh","executionInfo":{"status":"ok","timestamp":1693528437461,"user_tz":-540,"elapsed":8,"user":{"displayName":"ÏµúÏó∞Í≤Ω","userId":"07593915359092771547"}},"outputId":"640bf0c4-dd43-4470-cc09-3bbbe1fbdc3c"},"execution_count":41,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Date_1  InvoiceNo\n","0   2010-12       1400\n","1   2011-01        987\n","2   2011-02        997\n","3   2011-03       1321\n","4   2011-04       1149\n","5   2011-05       1555\n","6   2011-06       1393\n","7   2011-07       1331\n","8   2011-08       1280\n","9   2011-09       1755\n","10  2011-10       1929\n","11  2011-11       2657\n","12  2011-12        778"],"text/html":["\n","  <div id=\"df-d0722047-8da5-4d44-95e8-93f0ffdc5c0d\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date_1</th>\n","      <th>InvoiceNo</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2010-12</td>\n","      <td>1400</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2011-01</td>\n","      <td>987</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2011-02</td>\n","      <td>997</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2011-03</td>\n","      <td>1321</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2011-04</td>\n","      <td>1149</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>2011-05</td>\n","      <td>1555</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>2011-06</td>\n","      <td>1393</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>2011-07</td>\n","      <td>1331</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>2011-08</td>\n","      <td>1280</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>2011-09</td>\n","      <td>1755</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>2011-10</td>\n","      <td>1929</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>2011-11</td>\n","      <td>2657</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>2011-12</td>\n","      <td>778</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-d0722047-8da5-4d44-95e8-93f0ffdc5c0d')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-d0722047-8da5-4d44-95e8-93f0ffdc5c0d button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-d0722047-8da5-4d44-95e8-93f0ffdc5c0d');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-d286af27-0719-4542-99d3-adcc7bb74849\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-d286af27-0719-4542-99d3-adcc7bb74849')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-d286af27-0719-4542-99d3-adcc7bb74849 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":41}]},{"cell_type":"markdown","source":["#### ¬∑ Ïõî Î≥Ñ Ïù¥Ïö© ÎÇòÎùºÏàò\n","---"],"metadata":{"id":"MKUXXgE3MMOS"}},{"cell_type":"code","source":["df['Country'].nunique()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"6EMUMRfbL-bP","executionInfo":{"status":"ok","timestamp":1693528899053,"user_tz":-540,"elapsed":2,"user":{"displayName":"ÏµúÏó∞Í≤Ω","userId":"07593915359092771547"}},"outputId":"1746d1ff-f197-400a-cdcd-1e8bf8f6dd20"},"execution_count":44,"outputs":[{"output_type":"execute_result","data":{"text/plain":["37"]},"metadata":{},"execution_count":44}]},{"cell_type":"code","source":["df_country = df.groupby('Date_1',as_index=False)['Country'].nunique()\n","df_country"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":457},"id":"rb3x-HSLMbt6","executionInfo":{"status":"ok","timestamp":1693528833534,"user_tz":-540,"elapsed":5,"user":{"displayName":"ÏµúÏó∞Í≤Ω","userId":"07593915359092771547"}},"outputId":"695b54bf-3623-4648-de86-6c7314d8f605"},"execution_count":42,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Date_1  Country\n","0   2010-12       22\n","1   2011-01       20\n","2   2011-02       24\n","3   2011-03       22\n","4   2011-04       24\n","5   2011-05       20\n","6   2011-06       24\n","7   2011-07       24\n","8   2011-08       23\n","9   2011-09       20\n","10  2011-10       25\n","11  2011-11       21\n","12  2011-12       18"],"text/html":["\n","  <div id=\"df-696f96dc-83ea-4277-bd90-caa13024f5e5\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date_1</th>\n","      <th>Country</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>2010-12</td>\n","      <td>22</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2011-01</td>\n","      <td>20</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2011-02</td>\n","      <td>24</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2011-03</td>\n","      <td>22</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2011-04</td>\n","      <td>24</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>2011-05</td>\n","      <td>20</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>2011-06</td>\n","      <td>24</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>2011-07</td>\n","      <td>24</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>2011-08</td>\n","      <td>23</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>2011-09</td>\n","      <td>20</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>2011-10</td>\n","      <td>25</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>2011-11</td>\n","      <td>21</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>2011-12</td>\n","      <td>18</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-696f96dc-83ea-4277-bd90-caa13024f5e5')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-696f96dc-83ea-4277-bd90-caa13024f5e5 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-696f96dc-83ea-4277-bd90-caa13024f5e5');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-51ba4563-c479-44ea-8d37-061c96cdff29\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-51ba4563-c479-44ea-8d37-061c96cdff29')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-51ba4563-c479-44ea-8d37-061c96cdff29 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":42}]},{"cell_type":"code","source":["plt.plot(df_country['Date_1'], df_country['Country'], label='Country');\n","plt.gcf().set_size_inches(25,3)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":157},"id":"P3bAtnlvLzsw","executionInfo":{"status":"ok","timestamp":1693529143859,"user_tz":-540,"elapsed":766,"user":{"displayName":"ÏµúÏó∞Í≤Ω","userId":"07593915359092771547"}},"outputId":"37832ca7-aff8-4bc2-a8f5-12b971b04443"},"execution_count":52,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 2500x300 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":["#Í∞ÄÏû• Íµ¨Îß§ ÎßéÏù¥ Ìïú ÎÇòÎùº\n","df.groupby('Country')['InvoiceNo'].nunique().sort_values(ascending = False)"],"metadata":{"colab":{"base_uri":"https://localhost:8080/"},"id":"IW8nZDLVMiIX","executionInfo":{"status":"ok","timestamp":1693529463155,"user_tz":-540,"elapsed":2,"user":{"displayName":"ÏµúÏó∞Í≤Ω","userId":"07593915359092771547"}},"outputId":"a79919f3-76df-4996-e282-44d27989ff39"},"execution_count":56,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Country\n","United Kingdom          16646\n","Germany                   457\n","France                    389\n","EIRE                      260\n","Belgium                    98\n","Netherlands                94\n","Spain                      90\n","Australia                  57\n","Portugal                   57\n","Switzerland                51\n","Finland                    41\n","Italy                      38\n","Norway                     36\n","Sweden                     36\n","Channel Islands            26\n","Poland                     19\n","Japan                      19\n","Denmark                    18\n","Austria                    17\n","Cyprus                     16\n","Unspecified                 8\n","Iceland                     7\n","Singapore                   7\n","Canada                      6\n","Malta                       5\n","Israel                      5\n","Greece                      5\n","USA                         5\n","Lithuania                   4\n","European Community          4\n","United Arab Emirates        3\n","Czech Republic              2\n","Bahrain                     2\n","Lebanon                     1\n","RSA                         1\n","Saudi Arabia                1\n","Brazil                      1\n","Name: InvoiceNo, dtype: int64"]},"metadata":{},"execution_count":56}]},{"cell_type":"code","source":["pd.DataFrame(df.groupby(['Date_1','Country'])['InvoiceNo'].nunique())"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":455},"id":"h3eW2Gb-NhWC","executionInfo":{"status":"ok","timestamp":1693533677439,"user_tz":-540,"elapsed":328,"user":{"displayName":"ÏµúÏó∞Í≤Ω","userId":"07593915359092771547"}},"outputId":"650ea914-d084-4afa-ebdf-491293644045"},"execution_count":99,"outputs":[{"output_type":"execute_result","data":{"text/plain":["                         InvoiceNo\n","Date_1  Country                   \n","2010-12 Australia                3\n","        Austria                  1\n","        Belgium                  5\n","        Channel Islands          1\n","        Cyprus                   1\n","...                            ...\n","2011-12 Portugal                 4\n","        Spain                    2\n","        Sweden                   1\n","        USA                      2\n","        United Kingdom         706\n","\n","[287 rows x 1 columns]"],"text/html":["\n","  <div id=\"df-39b7f0aa-e73a-4a1a-bb29-84c4d289afa2\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th></th>\n","      <th>InvoiceNo</th>\n","    </tr>\n","    <tr>\n","      <th>Date_1</th>\n","      <th>Country</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th rowspan=\"5\" valign=\"top\">2010-12</th>\n","      <th>Australia</th>\n","      <td>3</td>\n","    </tr>\n","    <tr>\n","      <th>Austria</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Belgium</th>\n","      <td>5</td>\n","    </tr>\n","    <tr>\n","      <th>Channel Islands</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>Cyprus</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <th>...</th>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th rowspan=\"5\" valign=\"top\">2011-12</th>\n","      <th>Portugal</th>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>Spain</th>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>Sweden</th>\n","      <td>1</td>\n","    </tr>\n","    <tr>\n","      <th>USA</th>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>United Kingdom</th>\n","      <td>706</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>287 rows √ó 1 columns</p>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-39b7f0aa-e73a-4a1a-bb29-84c4d289afa2')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-39b7f0aa-e73a-4a1a-bb29-84c4d289afa2 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-39b7f0aa-e73a-4a1a-bb29-84c4d289afa2');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-b40a0b66-2d2e-4f33-b3b9-60f16694f3bf\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-b40a0b66-2d2e-4f33-b3b9-60f16694f3bf')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-b40a0b66-2d2e-4f33-b3b9-60f16694f3bf button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":99}]},{"cell_type":"markdown","source":["#### ¬∑ Ïõî Î≥Ñ Grade Ïù¥Ïö© ÎπÑÏ§ë\n","---"],"metadata":{"id":"m4smTmpkckzh"}},{"cell_type":"code","source":["df_grade = df.groupby(['Date_1','Grade'],as_index=False)['CustomerID'].nunique().sort_values(by=['Date_1','CustomerID'], ascending=False)\n","df_grade"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":1000},"id":"x8EaqgnvPPDT","executionInfo":{"status":"ok","timestamp":1693533572443,"user_tz":-540,"elapsed":622,"user":{"displayName":"ÏµúÏó∞Í≤Ω","userId":"07593915359092771547"}},"outputId":"00cbb0b2-53d2-4fb9-8944-7fa45b397a0e"},"execution_count":97,"outputs":[{"output_type":"execute_result","data":{"text/plain":["     Date_1   Grade  CustomerID\n","48  2011-12     vip         569\n","47  2011-12    Gold          37\n","49  2011-12    vvip           9\n","44  2011-11    Gold         997\n","45  2011-11     vip         657\n","46  2011-11    vvip          10\n","41  2011-10    Gold         866\n","42  2011-10     vip         488\n","43  2011-10    vvip          10\n","38  2011-09    Gold         757\n","39  2011-09     vip         499\n","40  2011-09    vvip          10\n","35  2011-08    Gold         530\n","36  2011-08     vip         395\n","37  2011-08    vvip          10\n","32  2011-07    Gold         550\n","33  2011-07     vip         389\n","34  2011-07    vvip          10\n","28  2011-06    Gold         585\n","30  2011-06     vip         387\n","31  2011-06    vvip          10\n","29  2011-06  Silver           9\n","24  2011-05    Gold         483\n","26  2011-05     vip         402\n","25  2011-05  Silver         160\n","27  2011-05    vvip          11\n","20  2011-04    Gold         367\n","22  2011-04     vip         330\n","21  2011-04  Silver         149\n","23  2011-04    vvip          10\n","15  2011-03    Gold         407\n","18  2011-03     vip         360\n","16  2011-03  Silver         183\n","17  2011-03   White          14\n","19  2011-03    vvip          10\n","10  2011-02    Gold         312\n","13  2011-02     vip         294\n","12  2011-02   White         108\n","11  2011-02  Silver          35\n","14  2011-02    vvip           9\n","8   2011-01     vip         312\n","5   2011-01    Gold         279\n","7   2011-01   White         104\n","6   2011-01  Silver          37\n","9   2011-01    vvip           9\n","3   2010-12     vip         371\n","0   2010-12    Gold         316\n","2   2010-12   White         144\n","1   2010-12  Silver          44\n","4   2010-12    vvip          10"],"text/html":["\n","  <div id=\"df-e9abc951-63ec-40d1-91be-ae39e90c576b\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Date_1</th>\n","      <th>Grade</th>\n","      <th>CustomerID</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>48</th>\n","      <td>2011-12</td>\n","      <td>vip</td>\n","      <td>569</td>\n","    </tr>\n","    <tr>\n","      <th>47</th>\n","      <td>2011-12</td>\n","      <td>Gold</td>\n","      <td>37</td>\n","    </tr>\n","    <tr>\n","      <th>49</th>\n","      <td>2011-12</td>\n","      <td>vvip</td>\n","      <td>9</td>\n","    </tr>\n","    <tr>\n","      <th>44</th>\n","      <td>2011-11</td>\n","      <td>Gold</td>\n","      <td>997</td>\n","    </tr>\n","    <tr>\n","      <th>45</th>\n","      <td>2011-11</td>\n","      <td>vip</td>\n","      <td>657</td>\n","    </tr>\n","    <tr>\n","      <th>46</th>\n","      <td>2011-11</td>\n","      <td>vvip</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>41</th>\n","      <td>2011-10</td>\n","      <td>Gold</td>\n","      <td>866</td>\n","    </tr>\n","    <tr>\n","      <th>42</th>\n","      <td>2011-10</td>\n","      <td>vip</td>\n","      <td>488</td>\n","    </tr>\n","    <tr>\n","      <th>43</th>\n","      <td>2011-10</td>\n","      <td>vvip</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>38</th>\n","      <td>2011-09</td>\n","      <td>Gold</td>\n","      <td>757</td>\n","    </tr>\n","    <tr>\n","      <th>39</th>\n","      <td>2011-09</td>\n","      <td>vip</td>\n","      <td>499</td>\n","    </tr>\n","    <tr>\n","      <th>40</th>\n","      <td>2011-09</td>\n","      <td>vvip</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>35</th>\n","      <td>2011-08</td>\n","      <td>Gold</td>\n","      <td>530</td>\n","    </tr>\n","    <tr>\n","      <th>36</th>\n","      <td>2011-08</td>\n","      <td>vip</td>\n","      <td>395</td>\n","    </tr>\n","    <tr>\n","      <th>37</th>\n","      <td>2011-08</td>\n","      <td>vvip</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>32</th>\n","      <td>2011-07</td>\n","      <td>Gold</td>\n","      <td>550</td>\n","    </tr>\n","    <tr>\n","      <th>33</th>\n","      <td>2011-07</td>\n","      <td>vip</td>\n","      <td>389</td>\n","    </tr>\n","    <tr>\n","      <th>34</th>\n","      <td>2011-07</td>\n","      <td>vvip</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>28</th>\n","      <td>2011-06</td>\n","      <td>Gold</td>\n","      <td>585</td>\n","    </tr>\n","    <tr>\n","      <th>30</th>\n","      <td>2011-06</td>\n","      <td>vip</td>\n","      <td>387</td>\n","    </tr>\n","    <tr>\n","      <th>31</th>\n","      <td>2011-06</td>\n","      <td>vvip</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>29</th>\n","      <td>2011-06</td>\n","      <td>Silver</td>\n","      <td>9</td>\n","    </tr>\n","    <tr>\n","      <th>24</th>\n","      <td>2011-05</td>\n","      <td>Gold</td>\n","      <td>483</td>\n","    </tr>\n","    <tr>\n","      <th>26</th>\n","      <td>2011-05</td>\n","      <td>vip</td>\n","      <td>402</td>\n","    </tr>\n","    <tr>\n","      <th>25</th>\n","      <td>2011-05</td>\n","      <td>Silver</td>\n","      <td>160</td>\n","    </tr>\n","    <tr>\n","      <th>27</th>\n","      <td>2011-05</td>\n","      <td>vvip</td>\n","      <td>11</td>\n","    </tr>\n","    <tr>\n","      <th>20</th>\n","      <td>2011-04</td>\n","      <td>Gold</td>\n","      <td>367</td>\n","    </tr>\n","    <tr>\n","      <th>22</th>\n","      <td>2011-04</td>\n","      <td>vip</td>\n","      <td>330</td>\n","    </tr>\n","    <tr>\n","      <th>21</th>\n","      <td>2011-04</td>\n","      <td>Silver</td>\n","      <td>149</td>\n","    </tr>\n","    <tr>\n","      <th>23</th>\n","      <td>2011-04</td>\n","      <td>vvip</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>2011-03</td>\n","      <td>Gold</td>\n","      <td>407</td>\n","    </tr>\n","    <tr>\n","      <th>18</th>\n","      <td>2011-03</td>\n","      <td>vip</td>\n","      <td>360</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>2011-03</td>\n","      <td>Silver</td>\n","      <td>183</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>2011-03</td>\n","      <td>White</td>\n","      <td>14</td>\n","    </tr>\n","    <tr>\n","      <th>19</th>\n","      <td>2011-03</td>\n","      <td>vvip</td>\n","      <td>10</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>2011-02</td>\n","      <td>Gold</td>\n","      <td>312</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>2011-02</td>\n","      <td>vip</td>\n","      <td>294</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>2011-02</td>\n","      <td>White</td>\n","      <td>108</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>2011-02</td>\n","      <td>Silver</td>\n","      <td>35</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>2011-02</td>\n","      <td>vvip</td>\n","      <td>9</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>2011-01</td>\n","      <td>vip</td>\n","      <td>312</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>2011-01</td>\n","      <td>Gold</td>\n","      <td>279</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>2011-01</td>\n","      <td>White</td>\n","      <td>104</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>2011-01</td>\n","      <td>Silver</td>\n","      <td>37</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>2011-01</td>\n","      <td>vvip</td>\n","      <td>9</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>2010-12</td>\n","      <td>vip</td>\n","      <td>371</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>2010-12</td>\n","      <td>Gold</td>\n","      <td>316</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2010-12</td>\n","      <td>White</td>\n","      <td>144</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2010-12</td>\n","      <td>Silver</td>\n","      <td>44</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>2010-12</td>\n","      <td>vvip</td>\n","      <td>10</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-e9abc951-63ec-40d1-91be-ae39e90c576b')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-e9abc951-63ec-40d1-91be-ae39e90c576b button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-e9abc951-63ec-40d1-91be-ae39e90c576b');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-4b1c4abf-6930-41ee-aa3f-075dc8ed34ea\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-4b1c4abf-6930-41ee-aa3f-075dc8ed34ea')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-4b1c4abf-6930-41ee-aa3f-075dc8ed34ea button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":97}]},{"cell_type":"code","source":["df_pivot = pd.pivot_table(df_grade, index='Date_1', columns='Grade', values='CustomerID')\n","df_pivot.fillna(0, inplace= True)\n","df_pivot['total']=df_pivot['Gold'] + df_pivot['Silver']+ df_pivot['White']+ df_pivot['vip']+ df_pivot['vvip']\n","\n","df_pivot.iloc[:,0] = (df_pivot.iloc[:,0]/df_pivot['total'])\n","df_pivot.iloc[:,1] = (df_pivot.iloc[:,1]/df_pivot['total'])\n","df_pivot.iloc[:,2] = (df_pivot.iloc[:,2]/df_pivot['total'])\n","df_pivot.iloc[:,3] = (df_pivot.iloc[:,3]/df_pivot['total'])\n","df_pivot.iloc[:,4] = (df_pivot.iloc[:,4]/df_pivot['total'])\n","\n","df_pivot.drop(['total'], axis=1, inplace= True)\n","df_pivot\n"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":488},"id":"7DLLg7mUdB3w","executionInfo":{"status":"ok","timestamp":1693535624761,"user_tz":-540,"elapsed":287,"user":{"displayName":"ÏµúÏó∞Í≤Ω","userId":"07593915359092771547"}},"outputId":"74113000-d61c-4832-f626-220c18086232"},"execution_count":110,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Grade        Gold    Silver     White       vip      vvip\n","Date_1                                                   \n","2010-12  0.357062  0.049718  0.162712  0.419209  0.011299\n","2011-01  0.376518  0.049933  0.140351  0.421053  0.012146\n","2011-02  0.411609  0.046174  0.142480  0.387863  0.011873\n","2011-03  0.417864  0.187885  0.014374  0.369610  0.010267\n","2011-04  0.428738  0.174065  0.000000  0.385514  0.011682\n","2011-05  0.457386  0.151515  0.000000  0.380682  0.010417\n","2011-06  0.590313  0.009082  0.000000  0.390515  0.010091\n","2011-07  0.579557  0.000000  0.000000  0.409905  0.010537\n","2011-08  0.566845  0.000000  0.000000  0.422460  0.010695\n","2011-09  0.597946  0.000000  0.000000  0.394155  0.007899\n","2011-10  0.634897  0.000000  0.000000  0.357771  0.007331\n","2011-11  0.599159  0.000000  0.000000  0.394832  0.006010\n","2011-12  0.060163  0.000000  0.000000  0.925203  0.014634"],"text/html":["\n","  <div id=\"df-db6d6bb6-860a-4f03-9ac4-8e9388f0a827\" class=\"colab-df-container\">\n","    <div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th>Grade</th>\n","      <th>Gold</th>\n","      <th>Silver</th>\n","      <th>White</th>\n","      <th>vip</th>\n","      <th>vvip</th>\n","    </tr>\n","    <tr>\n","      <th>Date_1</th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>2010-12</th>\n","      <td>0.357062</td>\n","      <td>0.049718</td>\n","      <td>0.162712</td>\n","      <td>0.419209</td>\n","      <td>0.011299</td>\n","    </tr>\n","    <tr>\n","      <th>2011-01</th>\n","      <td>0.376518</td>\n","      <td>0.049933</td>\n","      <td>0.140351</td>\n","      <td>0.421053</td>\n","      <td>0.012146</td>\n","    </tr>\n","    <tr>\n","      <th>2011-02</th>\n","      <td>0.411609</td>\n","      <td>0.046174</td>\n","      <td>0.142480</td>\n","      <td>0.387863</td>\n","      <td>0.011873</td>\n","    </tr>\n","    <tr>\n","      <th>2011-03</th>\n","      <td>0.417864</td>\n","      <td>0.187885</td>\n","      <td>0.014374</td>\n","      <td>0.369610</td>\n","      <td>0.010267</td>\n","    </tr>\n","    <tr>\n","      <th>2011-04</th>\n","      <td>0.428738</td>\n","      <td>0.174065</td>\n","      <td>0.000000</td>\n","      <td>0.385514</td>\n","      <td>0.011682</td>\n","    </tr>\n","    <tr>\n","      <th>2011-05</th>\n","      <td>0.457386</td>\n","      <td>0.151515</td>\n","      <td>0.000000</td>\n","      <td>0.380682</td>\n","      <td>0.010417</td>\n","    </tr>\n","    <tr>\n","      <th>2011-06</th>\n","      <td>0.590313</td>\n","      <td>0.009082</td>\n","      <td>0.000000</td>\n","      <td>0.390515</td>\n","      <td>0.010091</td>\n","    </tr>\n","    <tr>\n","      <th>2011-07</th>\n","      <td>0.579557</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.409905</td>\n","      <td>0.010537</td>\n","    </tr>\n","    <tr>\n","      <th>2011-08</th>\n","      <td>0.566845</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.422460</td>\n","      <td>0.010695</td>\n","    </tr>\n","    <tr>\n","      <th>2011-09</th>\n","      <td>0.597946</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.394155</td>\n","      <td>0.007899</td>\n","    </tr>\n","    <tr>\n","      <th>2011-10</th>\n","      <td>0.634897</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.357771</td>\n","      <td>0.007331</td>\n","    </tr>\n","    <tr>\n","      <th>2011-11</th>\n","      <td>0.599159</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.394832</td>\n","      <td>0.006010</td>\n","    </tr>\n","    <tr>\n","      <th>2011-12</th>\n","      <td>0.060163</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.925203</td>\n","      <td>0.014634</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>\n","    <div class=\"colab-df-buttons\">\n","\n","  <div class=\"colab-df-container\">\n","    <button class=\"colab-df-convert\" onclick=\"convertToInteractive('df-db6d6bb6-860a-4f03-9ac4-8e9388f0a827')\"\n","            title=\"Convert this dataframe to an interactive table.\"\n","            style=\"display:none;\">\n","\n","  <svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\" viewBox=\"0 -960 960 960\">\n","    <path d=\"M120-120v-720h720v720H120Zm60-500h600v-160H180v160Zm220 220h160v-160H400v160Zm0 220h160v-160H400v160ZM180-400h160v-160H180v160Zm440 0h160v-160H620v160ZM180-180h160v-160H180v160Zm440 0h160v-160H620v160Z\"/>\n","  </svg>\n","    </button>\n","\n","  <style>\n","    .colab-df-container {\n","      display:flex;\n","      gap: 12px;\n","    }\n","\n","    .colab-df-convert {\n","      background-color: #E8F0FE;\n","      border: none;\n","      border-radius: 50%;\n","      cursor: pointer;\n","      display: none;\n","      fill: #1967D2;\n","      height: 32px;\n","      padding: 0 0 0 0;\n","      width: 32px;\n","    }\n","\n","    .colab-df-convert:hover {\n","      background-color: #E2EBFA;\n","      box-shadow: 0px 1px 2px rgba(60, 64, 67, 0.3), 0px 1px 3px 1px rgba(60, 64, 67, 0.15);\n","      fill: #174EA6;\n","    }\n","\n","    .colab-df-buttons div {\n","      margin-bottom: 4px;\n","    }\n","\n","    [theme=dark] .colab-df-convert {\n","      background-color: #3B4455;\n","      fill: #D2E3FC;\n","    }\n","\n","    [theme=dark] .colab-df-convert:hover {\n","      background-color: #434B5C;\n","      box-shadow: 0px 1px 3px 1px rgba(0, 0, 0, 0.15);\n","      filter: drop-shadow(0px 1px 2px rgba(0, 0, 0, 0.3));\n","      fill: #FFFFFF;\n","    }\n","  </style>\n","\n","    <script>\n","      const buttonEl =\n","        document.querySelector('#df-db6d6bb6-860a-4f03-9ac4-8e9388f0a827 button.colab-df-convert');\n","      buttonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","\n","      async function convertToInteractive(key) {\n","        const element = document.querySelector('#df-db6d6bb6-860a-4f03-9ac4-8e9388f0a827');\n","        const dataTable =\n","          await google.colab.kernel.invokeFunction('convertToInteractive',\n","                                                    [key], {});\n","        if (!dataTable) return;\n","\n","        const docLinkHtml = 'Like what you see? Visit the ' +\n","          '<a target=\"_blank\" href=https://colab.research.google.com/notebooks/data_table.ipynb>data table notebook</a>'\n","          + ' to learn more about interactive tables.';\n","        element.innerHTML = '';\n","        dataTable['output_type'] = 'display_data';\n","        await google.colab.output.renderOutput(dataTable, element);\n","        const docLink = document.createElement('div');\n","        docLink.innerHTML = docLinkHtml;\n","        element.appendChild(docLink);\n","      }\n","    </script>\n","  </div>\n","\n","\n","<div id=\"df-beae172c-d2bf-4698-9177-e298693b87c5\">\n","  <button class=\"colab-df-quickchart\" onclick=\"quickchart('df-beae172c-d2bf-4698-9177-e298693b87c5')\"\n","            title=\"Suggest charts.\"\n","            style=\"display:none;\">\n","\n","<svg xmlns=\"http://www.w3.org/2000/svg\" height=\"24px\"viewBox=\"0 0 24 24\"\n","     width=\"24px\">\n","    <g>\n","        <path d=\"M19 3H5c-1.1 0-2 .9-2 2v14c0 1.1.9 2 2 2h14c1.1 0 2-.9 2-2V5c0-1.1-.9-2-2-2zM9 17H7v-7h2v7zm4 0h-2V7h2v10zm4 0h-2v-4h2v4z\"/>\n","    </g>\n","</svg>\n","  </button>\n","\n","<style>\n","  .colab-df-quickchart {\n","      --bg-color: #E8F0FE;\n","      --fill-color: #1967D2;\n","      --hover-bg-color: #E2EBFA;\n","      --hover-fill-color: #174EA6;\n","      --disabled-fill-color: #AAA;\n","      --disabled-bg-color: #DDD;\n","  }\n","\n","  [theme=dark] .colab-df-quickchart {\n","      --bg-color: #3B4455;\n","      --fill-color: #D2E3FC;\n","      --hover-bg-color: #434B5C;\n","      --hover-fill-color: #FFFFFF;\n","      --disabled-bg-color: #3B4455;\n","      --disabled-fill-color: #666;\n","  }\n","\n","  .colab-df-quickchart {\n","    background-color: var(--bg-color);\n","    border: none;\n","    border-radius: 50%;\n","    cursor: pointer;\n","    display: none;\n","    fill: var(--fill-color);\n","    height: 32px;\n","    padding: 0;\n","    width: 32px;\n","  }\n","\n","  .colab-df-quickchart:hover {\n","    background-color: var(--hover-bg-color);\n","    box-shadow: 0 1px 2px rgba(60, 64, 67, 0.3), 0 1px 3px 1px rgba(60, 64, 67, 0.15);\n","    fill: var(--button-hover-fill-color);\n","  }\n","\n","  .colab-df-quickchart-complete:disabled,\n","  .colab-df-quickchart-complete:disabled:hover {\n","    background-color: var(--disabled-bg-color);\n","    fill: var(--disabled-fill-color);\n","    box-shadow: none;\n","  }\n","\n","  .colab-df-spinner {\n","    border: 2px solid var(--fill-color);\n","    border-color: transparent;\n","    border-bottom-color: var(--fill-color);\n","    animation:\n","      spin 1s steps(1) infinite;\n","  }\n","\n","  @keyframes spin {\n","    0% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","      border-left-color: var(--fill-color);\n","    }\n","    20% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    30% {\n","      border-color: transparent;\n","      border-left-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","      border-right-color: var(--fill-color);\n","    }\n","    40% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-top-color: var(--fill-color);\n","    }\n","    60% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","    }\n","    80% {\n","      border-color: transparent;\n","      border-right-color: var(--fill-color);\n","      border-bottom-color: var(--fill-color);\n","    }\n","    90% {\n","      border-color: transparent;\n","      border-bottom-color: var(--fill-color);\n","    }\n","  }\n","</style>\n","\n","  <script>\n","    async function quickchart(key) {\n","      const quickchartButtonEl =\n","        document.querySelector('#' + key + ' button');\n","      quickchartButtonEl.disabled = true;  // To prevent multiple clicks.\n","      quickchartButtonEl.classList.add('colab-df-spinner');\n","      try {\n","        const charts = await google.colab.kernel.invokeFunction(\n","            'suggestCharts', [key], {});\n","      } catch (error) {\n","        console.error('Error during call to suggestCharts:', error);\n","      }\n","      quickchartButtonEl.classList.remove('colab-df-spinner');\n","      quickchartButtonEl.classList.add('colab-df-quickchart-complete');\n","    }\n","    (() => {\n","      let quickchartButtonEl =\n","        document.querySelector('#df-beae172c-d2bf-4698-9177-e298693b87c5 button');\n","      quickchartButtonEl.style.display =\n","        google.colab.kernel.accessAllowed ? 'block' : 'none';\n","    })();\n","  </script>\n","</div>\n","    </div>\n","  </div>\n"]},"metadata":{},"execution_count":110}]},{"cell_type":"code","source":["import warnings\n","warnings.filterwarnings('ignore')\n","plt.style.use(['dark_background'])\n","\n","ax = df_pivot.plot(kind='barh', stacked=True, title=\"years amt\", rot=0);\n","for p in ax.patches:\n","    left, bottom, width, height = p.get_bbox().bounds\n","    ax.annotate(\"%.1f\"%(width*100), xy=(left+width/2, bottom+height/2), ha='center', va='center', color='black');\n","\n","plt.box(False)\n","plt.gcf().set_size_inches(25, 15)\n","plt.show()"],"metadata":{"colab":{"base_uri":"https://localhost:8080/","height":625},"id":"rBZ1rQl8hd7f","executionInfo":{"status":"ok","timestamp":1693536641671,"user_tz":-540,"elapsed":2349,"user":{"displayName":"ÏµúÏó∞Í≤Ω","userId":"07593915359092771547"}},"outputId":"903b872c-a9df-4c10-af74-aaa2b4f33969"},"execution_count":112,"outputs":[{"output_type":"display_data","data":{"text/plain":["<Figure size 2500x1500 with 1 Axes>"],"image/png":"\n"},"metadata":{}}]},{"cell_type":"code","source":[],"metadata":{"id":"6paIe4i7pfDH"},"execution_count":null,"outputs":[]}]}